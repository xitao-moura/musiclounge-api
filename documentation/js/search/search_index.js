var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.166,1,2.549]],["body/controllers/AppController.html",[0,2.06,1,4.502,2,1.742,3,0.255,4,0.223,5,0.223,6,4.701,7,0.255,8,0.018,9,0.947,10,0.255,11,0.014,12,0.014,13,0.016,14,0.014]],["title/modules/AppModule.html",[15,1.166,16,2.549]],["body/modules/AppModule.html",[1,3.662,2,1.435,3,0.147,4,0.128,5,0.128,7,0.331,8,0.019,9,0.546,10,0.147,11,0.008,12,0.008,13,0.011,14,0.008,15,1.675,16,5.081,17,1.371,18,1.371,19,1.538,20,1.538,21,1.371,22,2.2,23,1.538,24,2.708,25,2.708,26,4.046,27,4.046,28,4.046,29,4.046,30,4.046,31,4.046,32,3.753,33,2.2,34,1.538,35,1.538,36,3.155,37,2.34,38,3.155,39,1.745,40,1.168,41,2.017,42,2.413,43,3.155,44,3.155,45,3.155,46,3.155,47,3.155,48,3.155,49,3.155,50,4.513,51,2.413,52,3.137,53,3.155,54,3.155,55,3.155,56,3.155,57,3.662,58,3.155,59,3.155,60,3.155,61,2.017,62,3.155,63,3.155]],["title/controllers/AuthController.html",[0,1.166,64,2.549]],["body/controllers/AuthController.html",[0,1.813,2,1.416,3,0.208,4,0.181,5,0.181,7,0.293,8,0.019,9,0.77,10,0.208,11,0.011,12,0.011,13,0.014,14,0.011,64,3.963,65,3.822,66,0.409,67,1.813,68,2.103,69,4.894,70,4.454,71,1.282,72,4.454,73,0.77,74,4.454,75,1.416,76,1.416,77,0.474,78,1.416,79,5.702,80,1.416,81,2.464,82,3.822,83,2.464,84,3.48,85,3.406,86,3.095,87,3.406,88,3.822,89,1.935,90,1.648,91,4.454,92,4.454,93,4.454,94,1.416,95,4.454]],["title/modules/AuthModule.html",[15,1.166,26,2.345]],["body/modules/AuthModule.html",[2,1.572,3,0.167,4,0.146,5,0.146,7,0.326,8,0.019,9,0.621,10,0.167,11,0.009,12,0.009,13,0.013,14,0.009,15,1.797,17,1.561,18,1.561,19,1.752,20,1.752,21,1.561,22,2.756,23,1.752,26,4.603,32,3.912,33,2.411,34,1.752,35,1.752,37,2.563,64,3.929,84,3.65,85,2.748,96,3.084,97,3.084,98,3.593,99,4.218,100,4.218,101,3.593,102,3.593,103,3.593,104,3.593,105,3.593,106,3.593,107,2.748,108,4.243,109,1.988,110,2.497,111,3.084,112,3.593,113,3.084,114,3.084,115,3.593,116,3.593,117,3.593]],["title/injectables/AuthService.html",[84,2.029,118,0.824]],["body/injectables/AuthService.html",[3,0.154,4,0.135,5,0.135,7,0.289,8,0.019,9,0.573,10,0.154,11,0.008,12,0.008,13,0.012,14,0.008,41,2.118,42,2.534,57,2.303,66,0.305,67,1.486,68,2.15,69,4.01,73,0.936,75,1.721,76,1.721,77,0.576,78,1.721,80,1.486,84,2.585,89,2.03,90,1.73,94,1.721,107,2.534,118,1.049,119,1.363,120,2.843,121,4.673,122,3.313,123,3.558,124,6.61,125,3.313,126,4.673,127,3.313,128,2.489,129,4.673,130,0.885,131,5.413,132,3.313,133,3.313,134,3.313,135,2.843,136,2.534,137,2.866,138,1.73,139,3.313,140,4.673,141,4.01,142,3.313,143,3.313,144,1.822,145,1.28,146,2.806,147,3.313,148,2.843,149,3.313,150,3.313,151,3.313,152,3.313,153,3.313]],["title/interfaces/Categoria.html",[154,1.431,155,2.175]],["body/interfaces/Categoria.html",[3,0.213,4,0.186,5,0.186,7,0.213,8,0.019,10,0.213,12,0.012,13,0.015,14,0.012,66,0.42,77,0.712,130,0.972,145,1.835,154,1.783,155,3.439,156,2.53,157,3.925,158,2.666,159,3.776,160,1.302,161,2.612,162,2.612,163,1.928,164,2.033,165,1.783]],["title/controllers/CategoriasController.html",[0,1.166,166,2.549]],["body/controllers/CategoriasController.html",[0,0.9,2,0.9,3,0.132,4,0.115,5,0.115,7,0.272,8,0.019,9,0.49,10,0.132,11,0.007,12,0.007,13,0.011,14,0.007,66,0.26,67,1.327,68,2.365,71,1.678,73,1.008,75,1.738,76,1.738,77,0.581,78,1.738,80,1.853,81,1.567,83,2.741,90,1.048,94,1.575,130,0.909,138,2.024,144,2.459,155,1.679,166,2.9,167,2.431,168,1.679,169,2.832,170,4.252,171,5.467,172,3.581,173,4.252,174,4.252,175,2.832,176,3.898,177,2.474,178,2.832,179,2.619,180,2.832,181,2.431,182,2.474,183,2.832,184,2.431,185,3.898,186,2.832,187,2.431,188,2.474,189,2.832,190,2.938,191,1.717,192,1.679,193,1.679,194,1.679,195,1.165,196,3.581,197,1.165,198,2.938,199,2.431,200,2.431,201,2.832,202,1.717,203,0.996,204,2.832,205,1.468,206,2.832,207,2.832,208,2.832,209,2.832,210,2.474,211,2.832,212,2.832,213,2.832,214,2.832]],["title/modules/CategoriasModule.html",[15,1.166,27,2.345]],["body/modules/CategoriasModule.html",[2,1.738,3,0.194,4,0.17,5,0.17,7,0.313,8,0.019,9,0.722,10,0.194,11,0.011,12,0.011,13,0.014,14,0.011,15,1.938,17,1.813,18,1.813,19,2.034,20,2.034,21,1.813,22,2.972,23,2.972,27,4.489,33,2.665,34,2.034,35,2.034,37,2.163,39,2.308,40,1.544,155,2.474,166,4.237,198,4.371,199,3.581,215,3.581,216,3.581,217,3.581,218,4.173,219,4.173,220,4.181,221,4.173,222,2.474,223,2.474]],["title/injectables/CategoriasService.html",[118,0.824,198,2.175]],["body/injectables/CategoriasService.html",[3,0.115,4,0.101,5,0.101,7,0.27,8,0.019,9,0.428,10,0.115,11,0.006,12,0.006,13,0.01,14,0.006,40,0.915,66,0.227,67,1.199,68,2.309,73,1.042,75,1.749,76,1.749,77,0.585,78,1.749,80,1.749,89,1.638,90,1.891,94,1.452,118,0.846,119,1.017,130,0.876,137,2.491,138,2.231,144,2.482,155,1.466,160,0.846,165,0.965,170,3.235,172,3.235,173,3.235,174,3.235,176,3.853,179,2.532,181,3.235,184,3.235,185,3.516,187,3.235,191,2.102,195,1.017,196,3.235,197,1.017,198,2.235,200,2.123,202,2.102,203,2.038,224,2.123,225,5.109,226,2.473,227,3.029,228,2.473,229,3.77,230,3.77,231,2.473,232,2.473,233,2.473,234,2.473,235,2.473,236,1.368,237,1.282,238,3.77,239,2.473,240,1.466,241,1.466,242,2.473,243,5.109,244,2.473,245,2.473,246,1.466,247,1.466,248,1.466,249,5.109,250,4.568,251,2.527,252,4.568,253,2.709,254,2.709,255,2.709,256,2.709,257,2.473,258,1.466,259,2.473,260,2.473,261,2.473]],["title/interfaces/Cidade.html",[154,1.431,262,2.175]],["body/interfaces/Cidade.html",[3,0.206,4,0.18,5,0.18,7,0.206,8,0.019,10,0.206,12,0.011,13,0.014,14,0.011,66,0.406,77,0.727,130,1.002,145,1.812,154,1.724,156,2.445,158,2.609,159,3.716,160,1.274,161,2.579,163,1.904,164,2.015,165,1.724,262,3.365,263,3.794,264,5.676,265,3.658]],["title/controllers/CidadesController.html",[0,1.166,266,2.549]],["body/controllers/CidadesController.html",[0,0.9,2,0.9,3,0.132,4,0.115,5,0.115,7,0.272,8,0.019,9,0.49,10,0.132,11,0.007,12,0.007,13,0.011,14,0.007,66,0.26,67,1.327,68,2.365,71,1.678,73,1.008,75,1.738,76,1.738,77,0.581,78,1.738,80,1.853,81,1.567,83,2.741,90,1.048,94,1.575,130,0.909,138,2.024,144,2.459,168,1.679,177,2.474,179,2.619,182,2.474,188,2.474,190,2.938,191,1.717,192,1.679,193,1.679,194,1.679,195,1.165,197,1.165,202,1.717,203,0.996,205,1.468,210,2.474,262,1.679,266,2.9,267,2.431,268,2.832,269,4.252,270,5.467,271,3.581,272,4.252,273,4.252,274,2.832,275,3.898,276,2.832,277,2.832,278,2.431,279,2.832,280,2.431,281,3.898,282,2.832,283,2.431,284,2.832,285,3.581,286,2.938,287,2.431,288,2.431,289,2.832,290,2.832,291,2.832,292,2.832,293,2.832,294,2.832,295,2.832,296,2.832,297,2.832,298,2.832]],["title/modules/CidadesModule.html",[15,1.166,28,2.345]],["body/modules/CidadesModule.html",[2,1.738,3,0.194,4,0.17,5,0.17,7,0.313,8,0.019,9,0.722,10,0.194,11,0.011,12,0.011,13,0.014,14,0.011,15,1.938,17,1.813,18,1.813,19,2.034,20,2.034,21,1.813,22,2.972,23,2.972,28,4.489,33,2.665,34,2.034,35,2.034,37,2.163,39,2.308,40,1.544,222,2.474,223,2.474,262,2.474,266,4.237,286,4.371,287,3.581,299,3.581,300,3.581,301,3.581,302,4.173,303,4.173,304,4.181,305,4.173]],["title/injectables/CidadesService.html",[118,0.824,286,2.175]],["body/injectables/CidadesService.html",[3,0.115,4,0.101,5,0.101,7,0.27,8,0.019,9,0.428,10,0.115,11,0.006,12,0.006,13,0.01,14,0.006,40,0.915,66,0.227,67,1.199,68,2.309,73,1.042,75,1.749,76,1.749,77,0.585,78,1.749,80,1.749,89,1.638,90,1.891,94,1.452,118,0.846,119,1.017,130,0.876,137,2.491,138,2.231,144,2.482,160,0.846,165,0.965,179,2.532,191,2.102,195,1.017,197,1.017,202,2.102,203,2.038,227,3.029,236,1.368,237,1.282,240,1.466,241,1.466,246,1.466,247,1.466,248,1.466,251,2.527,253,2.709,254,2.709,255,2.709,256,2.709,258,1.466,262,1.466,269,3.235,271,3.235,272,3.235,273,3.235,275,3.853,278,3.235,280,3.235,281,3.516,283,3.235,285,3.235,286,2.235,288,2.123,306,2.123,307,5.109,308,2.473,309,2.473,310,3.77,311,3.77,312,2.473,313,2.473,314,2.473,315,2.473,316,2.473,317,3.77,318,2.473,319,2.473,320,5.109,321,2.473,322,2.473,323,5.109,324,4.568,325,4.568,326,2.473,327,2.473,328,2.473,329,2.473]],["title/classes/CreateCategoriaDto.html",[11,0.009,185,2.345]],["body/classes/CreateCategoriaDto.html",[3,0.206,4,0.18,5,0.18,7,0.206,8,0.019,10,0.206,11,0.011,12,0.011,13,0.014,14,0.011,66,0.406,71,1.634,73,1.144,77,0.703,130,0.91,145,1.717,160,1.274,161,2.444,162,2.444,163,1.804,164,1.904,185,3.628,330,1.724,331,5.87,332,3.381,333,3.794,334,2.814,335,3.794,336,3.794,337,4.42,338,1.724]],["title/classes/CreateCidadeDto.html",[11,0.009,281,2.345]],["body/classes/CreateCidadeDto.html",[3,0.196,4,0.171,5,0.171,7,0.196,8,0.019,10,0.196,11,0.011,12,0.011,13,0.014,14,0.011,66,0.386,71,1.761,73,1.164,77,0.716,130,0.95,145,1.676,160,1.233,161,2.386,163,1.761,164,1.868,265,3.384,281,3.511,330,1.639,334,2.893,338,1.639,339,5.926,340,3.214,341,3.172,342,3.606,343,3.606,344,3.606,345,3.606,346,4.202]],["title/classes/CreateEstadoDto.html",[11,0.009,347,2.345]],["body/classes/CreateEstadoDto.html",[3,0.206,4,0.18,5,0.18,7,0.206,8,0.019,10,0.206,11,0.011,12,0.011,13,0.014,14,0.011,66,0.406,71,1.634,73,1.144,77,0.703,130,0.91,145,1.717,160,1.274,161,2.444,163,1.804,164,1.904,265,3.467,330,1.724,334,2.814,338,1.724,347,3.628,348,5.87,349,3.381,350,3.794,351,3.794,352,3.794,353,4.42]],["title/classes/CreateStatusDto.html",[11,0.009,354,2.345]],["body/classes/CreateStatusDto.html",[3,0.202,4,0.177,5,0.177,7,0.261,8,0.019,10,0.202,11,0.011,12,0.011,13,0.014,14,0.011,66,0.399,71,1.615,73,1.136,77,0.698,130,0.904,145,1.703,160,1.259,161,2.423,163,1.789,164,1.891,330,1.692,334,2.797,338,1.692,354,3.585,355,5.836,356,3.319,357,2.561,358,3.724,359,3.724,360,3.724,361,4.34,362,3.319]],["title/classes/CreateTipoDto.html",[11,0.009,363,2.345]],["body/classes/CreateTipoDto.html",[3,0.217,4,0.19,5,0.19,7,0.217,8,0.019,10,0.217,11,0.012,12,0.012,13,0.015,14,0.012,66,0.429,71,1.342,73,1.111,77,0.683,130,0.808,145,1.761,160,1.318,161,2.506,163,1.85,164,1.942,330,1.818,334,2.643,338,1.818,363,3.753,364,5.788,365,3.566,366,4.002,367,4.002,368,4.663]],["title/classes/CreateUserDto.html",[11,0.009,369,2.345]],["body/classes/CreateUserDto.html",[3,0.161,4,0.141,5,0.141,7,0.224,8,0.019,10,0.161,11,0.009,12,0.009,13,0.012,14,0.009,66,0.318,71,1.926,73,1.198,77,0.737,130,0.999,145,1.518,146,2.871,160,1.081,161,2.16,162,2.16,163,1.595,164,1.724,330,1.348,334,3.001,338,1.348,357,2.16,369,3.078,370,6.022,371,2.644,372,3.85,373,3.284,374,3.284,375,3.458,376,3.458,377,3.458,378,3.458,379,3.458,380,2.967,381,3.458,382,3.458,383,3.458,384,2.05,385,2.967]],["title/interfaces/Estado.html",[154,1.431,341,1.902]],["body/interfaces/Estado.html",[3,0.213,4,0.186,5,0.186,7,0.213,8,0.019,10,0.213,12,0.012,13,0.015,14,0.012,66,0.42,77,0.712,130,0.972,145,1.835,154,1.783,156,2.53,158,2.666,159,3.776,160,1.302,161,2.612,163,1.928,164,2.033,165,1.783,265,3.705,341,3.007,386,3.925]],["title/controllers/EstadosController.html",[0,1.166,387,2.549]],["body/controllers/EstadosController.html",[0,0.9,2,0.9,3,0.132,4,0.115,5,0.115,7,0.272,8,0.019,9,0.49,10,0.132,11,0.007,12,0.007,13,0.011,14,0.007,66,0.26,67,1.327,68,2.365,71,1.678,73,1.008,75,1.738,76,1.738,77,0.581,78,1.738,80,1.853,81,1.567,83,2.741,90,1.048,94,1.575,130,0.909,138,2.024,144,2.459,168,1.679,177,2.474,179,2.619,182,2.474,188,2.474,190,2.938,191,1.717,192,1.679,193,1.679,194,1.679,195,1.165,197,1.165,202,1.717,203,0.996,205,1.468,210,2.474,341,1.468,347,3.898,387,2.9,388,2.431,389,2.832,390,4.252,391,5.467,392,3.581,393,4.252,394,4.252,395,2.832,396,3.898,397,2.832,398,2.832,399,2.431,400,2.832,401,2.431,402,2.832,403,2.431,404,2.832,405,3.581,406,2.938,407,2.431,408,2.431,409,2.832,410,2.832,411,2.832,412,2.832,413,2.832,414,2.832,415,2.832,416,2.832,417,2.832,418,2.832]],["title/modules/EstadosModule.html",[15,1.166,29,2.345]],["body/modules/EstadosModule.html",[2,1.738,3,0.194,4,0.17,5,0.17,7,0.313,8,0.019,9,0.722,10,0.194,11,0.011,12,0.011,13,0.014,14,0.011,15,1.938,17,1.813,18,1.813,19,2.034,20,2.034,21,1.813,22,2.972,23,2.972,29,4.489,33,2.665,34,2.034,35,2.034,37,2.163,39,2.308,40,1.544,222,2.474,223,2.474,341,2.163,387,4.237,406,4.371,407,3.581,419,3.581,420,3.581,421,3.581,422,4.173,423,4.173,424,4.181,425,4.173]],["title/injectables/EstadosService.html",[118,0.824,406,2.175]],["body/injectables/EstadosService.html",[3,0.115,4,0.101,5,0.101,7,0.27,8,0.019,9,0.428,10,0.115,11,0.006,12,0.006,13,0.01,14,0.006,40,0.915,66,0.227,67,1.199,68,2.309,73,1.042,75,1.749,76,1.749,77,0.585,78,1.749,80,1.749,89,1.638,90,1.891,94,1.452,118,0.846,119,1.017,130,0.876,137,2.491,138,2.231,144,2.482,160,0.846,165,0.965,179,2.532,191,2.102,195,1.017,197,1.017,202,2.102,203,2.038,227,3.029,236,1.368,237,1.282,240,1.466,241,1.466,246,1.466,247,1.466,248,1.466,251,2.527,253,2.709,254,2.709,255,2.709,256,2.709,258,1.466,341,1.282,347,3.516,390,3.235,392,3.235,393,3.235,394,3.235,396,3.853,399,3.235,401,3.235,403,3.235,405,3.235,406,2.235,408,2.123,426,2.123,427,5.109,428,2.473,429,2.473,430,3.77,431,3.77,432,2.473,433,2.473,434,2.473,435,2.473,436,2.473,437,3.77,438,2.473,439,2.473,440,5.109,441,2.473,442,2.473,443,5.109,444,4.568,445,4.568,446,2.473,447,2.473,448,2.473,449,2.473]],["title/injectables/JwtAuthGuard.html",[118,0.824,450,2.549]],["body/injectables/JwtAuthGuard.html",[3,0.246,4,0.215,5,0.215,7,0.296,8,0.019,9,0.914,10,0.246,11,0.013,12,0.013,13,0.016,14,0.013,109,2.923,118,1.423,119,2.173,158,2.429,450,4.406,451,4.041,452,4.041,453,4.534,454,5.284]],["title/injectables/JwtStrategy.html",[99,2.345,118,0.824]],["body/injectables/JwtStrategy.html",[3,0.197,4,0.172,5,0.172,7,0.303,8,0.019,9,0.729,10,0.197,11,0.011,12,0.011,13,0.014,14,0.011,61,2.696,66,0.388,67,1.75,68,2.048,73,0.952,75,1.341,76,1.341,77,0.448,78,1.341,80,1.341,89,2.663,94,1.341,99,3.519,109,2.333,110,2.931,111,3.619,114,3.619,118,1.236,119,1.735,146,2.186,148,3.619,158,1.939,455,3.619,456,4.724,457,4.217,458,5.505,459,4.217,460,4.217,461,3.619,462,3.225,463,3.225,464,3.619,465,3.619,466,3.619,467,4.217,468,4.217,469,4.217,470,4.217,471,4.217,472,4.217,473,4.217]],["title/injectables/LocalAuthGuard.html",[86,2.549,118,0.824]],["body/injectables/LocalAuthGuard.html",[3,0.241,4,0.21,5,0.21,7,0.314,8,0.019,9,0.894,10,0.241,11,0.013,12,0.013,13,0.016,14,0.013,86,4.348,109,2.859,118,1.405,119,2.126,158,2.376,452,3.953,453,4.436,474,4.436,475,5.169,476,4.436,477,5.169]],["title/injectables/LocalStrategy.html",[100,2.345,118,0.824]],["body/injectables/LocalStrategy.html",[3,0.182,4,0.159,5,0.159,7,0.294,8,0.019,9,0.677,10,0.182,11,0.01,12,0.01,13,0.013,14,0.01,66,0.36,67,1.665,68,1.974,73,0.906,75,1.665,76,1.665,77,0.557,78,1.665,80,1.244,84,3.743,85,2.992,87,2.992,89,1.7,94,1.244,100,3.349,109,2.164,118,1.176,119,1.609,128,2.408,130,0.932,137,1.907,138,1.448,146,2.716,158,1.799,179,2.043,203,1.376,205,2.028,251,2.164,373,3.899,456,4.495,461,3.357,462,2.992,464,3.357,465,3.357,466,3.357,478,3.357,479,3.912,480,3.912,481,5.238,482,3.912,483,5.238,484,3.912,485,3.912,486,3.912,487,3.912]],["title/guards/RolesGuard.html",[52,2.549,488,2.805]],["body/guards/RolesGuard.html",[3,0.184,4,0.161,5,0.161,7,0.295,8,0.019,9,0.683,10,0.184,11,0.01,12,0.01,13,0.013,14,0.01,51,3.022,52,3.665,57,2.746,66,0.363,67,1.676,73,0.912,75,1.676,76,1.676,77,0.561,78,1.676,80,1.256,89,1.717,94,1.676,118,1.184,128,1.816,137,2.571,205,2.048,384,2.343,489,3.951,490,3.391,491,6.332,492,3.951,493,6.787,494,3.951,495,5.273,496,6.332,497,3.951,498,3.951,499,5.273,500,3.951,501,3.022,502,3.951,503,3.951,504,5.273,505,3.951,506,3.951,507,3.951,508,3.951,509,3.951,510,3.951,511,3.951]],["title/interfaces/Status.html",[154,1.431,162,1.431]],["body/interfaces/Status.html",[3,0.209,4,0.183,5,0.183,7,0.267,8,0.019,10,0.209,12,0.011,13,0.015,14,0.011,66,0.412,77,0.707,130,0.967,145,1.822,154,1.75,156,2.482,158,2.634,159,3.743,160,1.286,161,2.594,162,2.234,163,1.915,164,2.023,165,1.75,357,2.68,362,3.432,512,3.851]],["title/controllers/StatusController.html",[0,1.166,513,2.549]],["body/controllers/StatusController.html",[0,0.9,2,0.9,3,0.132,4,0.115,5,0.115,7,0.272,8,0.019,9,0.49,10,0.132,11,0.007,12,0.007,13,0.011,14,0.007,66,0.26,67,1.327,68,2.365,71,1.678,73,1.008,75,1.738,76,1.738,77,0.581,78,1.738,80,1.853,81,1.567,83,2.741,90,1.048,94,1.575,130,0.909,138,2.024,144,2.459,162,1.105,168,1.679,177,2.474,179,2.619,182,2.474,188,2.474,190,2.938,191,1.717,192,1.679,193,1.679,194,1.679,195,1.165,197,1.165,202,1.717,203,0.996,205,1.468,210,2.474,354,3.898,513,2.9,514,2.431,515,2.832,516,4.252,517,5.467,518,3.581,519,4.252,520,4.252,521,2.832,522,3.898,523,2.832,524,2.832,525,2.431,526,2.832,527,2.431,528,2.832,529,2.431,530,2.832,531,3.581,532,2.938,533,2.431,534,2.431,535,2.832,536,2.832,537,2.832,538,2.832,539,2.832,540,2.832,541,2.832,542,2.832,543,2.832,544,2.832]],["title/modules/StatusModule.html",[15,1.166,30,2.345]],["body/modules/StatusModule.html",[2,1.738,3,0.194,4,0.17,5,0.17,7,0.313,8,0.019,9,0.722,10,0.194,11,0.011,12,0.011,13,0.014,14,0.011,15,1.938,17,1.813,18,1.813,19,2.034,20,2.034,21,1.813,22,2.972,23,2.972,30,4.489,33,2.665,34,2.034,35,2.034,37,2.163,39,2.308,40,1.544,162,1.627,222,2.474,223,2.474,513,4.237,532,4.371,533,3.581,545,3.581,546,3.581,547,3.581,548,4.173,549,4.173,550,4.181,551,4.173]],["title/injectables/StatusService.html",[118,0.824,532,2.175]],["body/injectables/StatusService.html",[3,0.114,4,0.099,5,0.099,7,0.269,8,0.019,9,0.422,10,0.114,11,0.006,12,0.006,13,0.009,14,0.006,40,0.902,66,0.224,67,1.185,68,2.303,73,1.037,75,1.737,76,1.737,77,0.581,78,1.737,80,1.737,89,1.62,90,1.877,94,1.737,118,0.837,119,1.003,130,0.873,137,2.472,138,2.219,144,2.472,160,0.837,162,0.951,165,0.951,179,2.523,191,2.086,195,1.003,197,1.003,202,2.086,203,2.026,227,3.007,236,1.349,237,1.264,240,1.445,241,1.445,246,2.211,247,2.211,248,1.445,251,2.505,253,2.684,254,2.684,255,2.684,256,2.684,258,1.445,354,3.493,516,3.2,518,3.2,519,3.2,520,3.2,522,3.833,525,3.2,527,3.2,529,3.2,531,3.2,532,2.211,534,2.092,552,2.092,553,5.071,554,2.438,555,2.438,556,3.729,557,3.729,558,2.438,559,2.438,560,2.438,561,2.438,562,2.438,563,3.729,564,2.438,565,2.438,566,2.438,567,2.438,568,2.438,569,2.092,570,2.092,571,4.528,572,5.071,573,4.528,574,4.528,575,2.438,576,2.438,577,2.438,578,2.438]],["title/interfaces/Tipo.html",[154,1.431,357,1.431]],["body/interfaces/Tipo.html",[3,0.221,4,0.193,5,0.193,7,0.221,8,0.019,10,0.221,12,0.012,13,0.015,14,0.012,66,0.435,77,0.688,130,0.891,145,1.859,154,1.847,156,2.62,158,2.726,159,3.838,160,1.331,161,2.645,163,1.953,164,2.051,165,1.847,357,2.312,579,4.065]],["title/controllers/TiposController.html",[0,1.166,580,2.549]],["body/controllers/TiposController.html",[0,0.9,2,0.9,3,0.132,4,0.115,5,0.115,7,0.272,8,0.019,9,0.49,10,0.132,11,0.007,12,0.007,13,0.011,14,0.007,66,0.26,67,1.327,68,2.365,71,1.678,73,1.008,75,1.738,76,1.738,77,0.581,78,1.738,80,1.853,81,1.567,83,2.741,90,1.048,94,1.575,130,0.909,138,2.024,144,2.459,168,1.679,177,2.474,179,2.619,182,2.474,188,2.474,190,2.938,191,1.717,192,1.679,193,1.679,194,1.679,195,1.165,197,1.165,202,1.717,203,0.996,205,1.468,210,2.474,357,1.105,363,3.898,580,2.9,581,2.431,582,2.832,583,4.252,584,5.467,585,3.581,586,4.252,587,4.252,588,2.832,589,3.898,590,2.832,591,2.832,592,2.431,593,2.832,594,2.431,595,2.832,596,2.431,597,2.832,598,3.581,599,2.938,600,2.431,601,2.431,602,2.832,603,2.832,604,2.832,605,2.832,606,2.832,607,2.832,608,2.832,609,2.832,610,2.832,611,2.832]],["title/modules/TiposModule.html",[15,1.166,31,2.345]],["body/modules/TiposModule.html",[2,1.738,3,0.194,4,0.17,5,0.17,7,0.313,8,0.019,9,0.722,10,0.194,11,0.011,12,0.011,13,0.014,14,0.011,15,1.938,17,1.813,18,1.813,19,2.034,20,2.034,21,1.813,22,2.972,23,2.972,31,4.489,33,2.665,34,2.034,35,2.034,37,2.163,39,2.308,40,1.544,222,2.474,223,2.474,357,1.627,580,4.237,599,4.371,600,3.581,612,3.581,613,3.581,614,3.581,615,4.173,616,4.173,617,4.181,618,4.173]],["title/injectables/TiposService.html",[118,0.824,599,2.175]],["body/injectables/TiposService.html",[3,0.115,4,0.101,5,0.101,7,0.27,8,0.019,9,0.428,10,0.115,11,0.006,12,0.006,13,0.01,14,0.006,40,0.915,66,0.227,67,1.199,68,2.309,73,1.042,75,1.749,76,1.749,77,0.585,78,1.749,80,1.749,89,1.638,90,1.891,94,1.452,118,0.846,119,1.017,130,0.876,137,2.491,138,2.231,144,2.482,160,0.846,165,0.965,179,2.532,191,2.102,195,1.017,197,1.017,202,2.102,203,2.038,227,3.029,236,1.368,237,1.282,240,1.466,241,1.466,246,1.466,247,1.466,248,1.466,251,2.527,253,2.709,254,2.709,255,2.709,256,2.709,258,1.466,357,0.965,363,3.516,583,3.235,585,3.235,586,3.235,587,3.235,589,3.853,592,3.235,594,3.235,596,3.235,598,3.235,599,2.235,601,2.123,619,2.123,620,5.109,621,2.473,622,2.473,623,3.77,624,3.77,625,2.473,626,2.473,627,2.473,628,2.473,629,2.473,630,3.77,631,2.473,632,2.473,633,5.109,634,2.473,635,2.473,636,5.109,637,4.568,638,4.568,639,2.473,640,2.473,641,2.473,642,2.473]],["title/classes/UpdateCategoriaDto.html",[11,0.009,176,2.345]],["body/classes/UpdateCategoriaDto.html",[3,0.214,4,0.187,5,0.187,7,0.214,8,0.019,10,0.214,11,0.012,12,0.012,13,0.015,14,0.012,66,0.422,71,1.674,73,1.103,77,0.678,130,0.923,145,1.748,160,1.305,162,2.488,163,1.837,164,1.674,176,3.717,330,1.79,332,3.511,333,3.94,334,2.846,335,3.94,336,3.94,338,1.79,643,5.756]],["title/classes/UpdateCidadeDto.html",[11,0.009,275,2.345]],["body/classes/UpdateCidadeDto.html",[3,0.203,4,0.177,5,0.177,7,0.203,8,0.019,10,0.203,11,0.011,12,0.011,13,0.014,14,0.011,66,0.4,71,1.792,73,1.138,77,0.699,130,0.96,145,1.705,160,1.262,163,1.792,164,1.618,265,3.443,275,3.594,330,1.699,334,2.918,338,1.699,340,3.331,341,3.227,342,3.738,343,3.738,344,3.738,345,3.738,644,5.843]],["title/classes/UpdateEstadoDto.html",[11,0.009,396,2.345]],["body/classes/UpdateEstadoDto.html",[3,0.214,4,0.187,5,0.187,7,0.214,8,0.019,10,0.214,11,0.012,12,0.012,13,0.015,14,0.012,66,0.422,71,1.674,73,1.103,77,0.678,130,0.923,145,1.748,160,1.305,163,1.837,164,1.674,265,3.529,330,1.79,334,2.846,338,1.79,349,3.511,350,3.94,351,3.94,352,3.94,396,3.717,645,5.756]],["title/classes/UpdateStatusDto.html",[11,0.009,522,2.345]],["body/classes/UpdateStatusDto.html",[3,0.21,4,0.183,5,0.183,7,0.268,8,0.019,10,0.21,11,0.011,12,0.011,13,0.015,14,0.011,66,0.414,71,1.653,73,1.094,77,0.672,130,0.917,145,1.733,160,1.289,163,1.82,164,1.653,330,1.756,334,2.83,338,1.756,356,3.445,357,2.597,358,3.865,359,3.865,360,3.865,362,3.445,522,3.672,646,5.715]],["title/classes/UpdateTipoDto.html",[11,0.009,589,2.345]],["body/classes/UpdateTipoDto.html",[3,0.226,4,0.198,5,0.198,7,0.226,8,0.019,10,0.226,11,0.012,12,0.012,13,0.015,14,0.012,66,0.446,71,1.397,73,1.041,77,0.64,130,0.829,145,1.793,160,1.351,163,1.884,164,1.733,330,1.893,334,2.692,338,1.893,365,3.711,366,4.165,367,4.165,589,3.848,647,5.616]],["title/classes/UpdateUserDto.html",[11,0.009,648,2.345]],["body/classes/UpdateUserDto.html",[3,0.168,4,0.147,5,0.147,7,0.168,8,0.019,10,0.168,11,0.009,12,0.009,13,0.013,14,0.009,66,0.332,71,1.949,73,1.193,77,0.733,130,1.005,145,1.554,146,2.94,160,1.115,162,2.212,163,1.633,164,1.429,330,1.41,334,3.02,338,1.41,357,2.212,371,2.765,372,3.941,373,3.362,374,3.362,380,3.102,648,3.174,649,6.005,650,3.615,651,3.615,652,3.615,653,3.615,654,3.615,655,3.615,656,3.615]],["title/interfaces/User.html",[128,1.686,154,1.431]],["body/interfaces/User.html",[3,0.179,4,0.156,5,0.156,7,0.241,8,0.019,10,0.179,12,0.01,13,0.013,14,0.01,66,0.353,77,0.753,128,2.377,130,1.038,145,1.714,146,3.244,154,1.496,156,2.122,158,2.377,159,3.467,160,1.161,161,2.44,162,2.44,163,1.801,164,1.937,165,1.496,357,2.44,372,4.349,373,3.71,374,3.71,384,2.275,385,3.292,657,3.292]],["title/controllers/UsersController.html",[0,1.166,658,2.549]],["body/controllers/UsersController.html",[0,0.856,2,0.856,3,0.125,4,0.11,5,0.11,7,0.297,8,0.019,9,0.465,10,0.125,11,0.007,12,0.007,13,0.01,14,0.007,66,0.247,67,1.277,68,2.345,71,1.643,73,0.987,75,1.695,76,1.695,77,0.567,78,1.695,80,1.814,81,1.489,83,2.66,88,2.31,90,0.996,94,1.529,123,2.223,128,1.237,130,0.897,138,1.974,144,2.418,168,1.596,177,1.596,179,2.587,182,2.382,188,1.596,190,2.851,191,1.653,192,1.596,193,1.596,194,1.596,195,1.107,197,1.107,202,1.653,203,0.946,205,1.395,210,2.382,369,3.826,374,1.596,384,1.596,450,1.871,451,2.058,648,3.826,658,2.793,659,2.31,660,2.691,661,4.126,662,5.332,663,3.448,664,4.126,665,4.126,666,2.691,667,2.691,668,2.691,669,2.691,670,2.691,671,2.31,672,2.691,673,2.31,674,2.691,675,2.31,676,2.691,677,2.691,678,3.448,679,2.31,680,2.31,681,2.691,682,2.691,683,2.691,684,2.691,685,2.691,686,5.706,687,2.691,688,2.691,689,2.691,690,2.691,691,2.691,692,2.691,693,2.691,694,2.691]],["title/modules/UsersModule.html",[15,1.166,32,2.175]],["body/modules/UsersModule.html",[2,1.695,3,0.187,4,0.164,5,0.164,7,0.318,8,0.019,9,0.695,10,0.187,11,0.01,12,0.01,13,0.014,14,0.01,15,1.903,17,1.746,18,1.746,19,1.959,20,1.959,21,1.746,22,2.918,23,2.918,32,4.125,33,2.6,34,1.959,35,1.959,37,2.083,39,2.222,40,1.487,61,2.568,108,3.448,109,2.222,123,4.055,128,1.847,222,2.382,223,2.382,463,3.073,658,4.159,679,3.448,695,3.448,696,3.448,697,3.448,698,4.018,699,4.018,700,4.078,701,4.018,702,4.018,703,4.018,704,4.018]],["title/injectables/UsersService.html",[118,0.824,123,2.029]],["body/injectables/UsersService.html",[3,0.095,4,0.083,5,0.083,7,0.272,8,0.019,9,0.354,10,0.095,11,0.005,12,0.005,13,0.008,14,0.005,40,0.757,41,1.307,42,1.563,61,1.307,66,0.188,67,1.033,68,2.33,73,1.039,75,1.786,76,1.786,77,0.57,78,1.786,80,1.786,89,1.412,90,1.706,94,1.786,118,0.73,119,0.841,123,1.798,128,0.94,130,0.88,135,3.472,136,1.563,137,2.928,138,2.366,141,1.754,144,2.342,146,1.685,160,0.73,165,0.797,179,2.4,191,1.896,195,0.841,197,0.841,202,1.896,203,1.883,227,2.733,236,1.131,237,1.06,240,1.212,241,1.212,246,1.927,247,1.927,248,1.212,251,2.238,253,2.399,254,2.399,255,2.399,256,2.399,258,1.212,369,3.216,373,1.212,569,1.754,570,1.754,648,3.59,661,2.789,663,2.789,664,2.789,665,2.789,671,2.789,673,2.789,675,2.789,678,2.789,680,1.754,705,1.754,706,4.61,707,3.25,708,2.044,709,2.044,710,3.25,711,3.25,712,2.044,713,3.25,714,2.044,715,2.044,716,2.044,717,3.25,718,2.044,719,2.044,720,2.044,721,3.25,722,2.044,723,2.044,724,5.356,725,2.044,726,3.25,727,2.044,728,2.044,729,2.044,730,2.044,731,2.044,732,4.046,733,2.044,734,4.046,735,2.044,736,2.044,737,2.044,738,2.044,739,2.044,740,2.044,741,2.044,742,2.044,743,3.25,744,3.25,745,2.044,746,2.044,747,2.044,748,2.044,749,3.25,750,1.754,751,2.044]],["title/coverage.html",[752,3.835]],["body/coverage.html",[0,1.929,1,1.596,5,0.093,6,1.971,8,0.019,11,0.017,12,0.006,13,0.009,14,0.006,21,0.998,41,1.468,52,1.596,64,1.596,65,1.971,77,0.244,84,1.271,86,1.596,99,1.468,100,1.468,110,1.596,118,1.455,120,1.971,123,1.271,128,1.056,154,2.194,155,1.362,157,1.971,162,0.896,166,1.596,167,1.971,176,1.468,185,1.468,198,1.362,203,0.808,220,1.756,224,1.971,262,1.362,263,1.971,266,1.596,267,1.971,275,1.468,281,1.468,286,1.362,304,1.756,306,1.971,331,1.971,332,2.724,339,1.971,340,2.724,341,1.191,347,1.468,348,1.971,349,2.724,354,1.468,355,1.971,356,2.724,357,0.896,363,1.468,364,1.971,365,2.724,369,1.468,370,1.971,371,2.724,374,1.362,386,1.971,387,1.596,388,1.971,396,1.468,406,1.362,424,1.756,426,1.971,450,1.596,451,1.756,452,2.724,455,1.971,474,1.971,478,1.971,488,1.756,490,1.971,501,1.756,512,1.971,513,1.596,514,1.971,522,1.468,532,1.362,550,1.756,552,1.971,579,1.971,580,1.596,581,1.971,589,1.468,599,1.362,617,1.756,619,1.971,643,1.971,644,1.971,645,1.971,646,1.971,647,1.971,648,1.468,649,1.971,657,1.971,658,1.596,659,1.971,700,1.756,705,1.971,752,1.756,753,2.297,754,2.297,755,2.297,756,7.547,757,6.744,758,2.297,759,5.627,760,1.971,761,6.365,762,4.914,763,6.066,764,5.318,765,5.87,766,1.971,767,1.971,768,1.971,769,3.056,770,1.971,771,1.971,772,2.297,773,1.971,774,1.971,775,4.362,776,2.297,777,1.971,778,2.297,779,2.297]],["title/dependencies.html",[18,1.918,780,3.059]],["body/dependencies.html",[8,0.019,9,0.668,11,0.013,12,0.01,13,0.013,14,0.01,18,1.678,40,1.429,51,2.953,82,3.314,87,2.953,107,2.953,109,2.136,136,2.953,165,1.506,338,1.506,462,4.486,463,2.953,476,3.314,781,3.861,782,3.861,783,5.192,784,5.192,785,3.861,786,3.861,787,3.861,788,5.192,789,3.861,790,3.861,791,3.861,792,3.861,793,3.861,794,3.861,795,3.861,796,3.861,797,3.861,798,3.861,799,3.861,800,3.861,801,3.861,802,3.861,803,3.861,804,3.861,805,3.861,806,3.861,807,3.861,808,3.861,809,3.314,810,3.861,811,5.192,812,3.861,813,3.861,814,3.861,815,3.861,816,3.861,817,3.861,818,3.861,819,3.861,820,3.861,821,3.861,822,3.861,823,3.861,824,3.861,825,3.861,826,3.861,827,3.861,828,3.861,829,3.861,830,3.861,831,3.861,832,3.861,833,3.861]],["title/miscellaneous/enumerations.html",[834,1.814,835,3.788]],["body/miscellaneous/enumerations.html",[8,0.018,12,0.014,13,0.016,14,0.014,66,0.506,128,2.986,237,3.367,384,3.851,834,3.263,835,4.723,836,5.504,837,5.504,838,6.496]],["title/miscellaneous/functions.html",[834,1.814,839,3.788]],["body/miscellaneous/functions.html",[8,0.017,12,0.014,13,0.017,14,0.014,21,3.044,66,0.523,771,4.881,834,3.372,839,4.881,840,5.688]],["title/index.html",[66,0.281,841,3.059,842,3.059]],["body/index.html",[4,0.165,8,0.019,12,0.01,13,0.014,14,0.01,752,3.104,843,4.059,844,4.059,845,5.368,846,4.059,847,4.059,848,4.059,849,4.059,850,4.059,851,4.059,852,4.059,853,6.015,854,4.059,855,4.059,856,4.059,857,4.059,858,6.975,859,4.059,860,4.059,861,4.059,862,6.839,863,4.059,864,4.059,865,5.368,866,4.059,867,4.059,868,4.059,869,4.059,870,5.368,871,5.368,872,4.059,873,4.059,874,4.059,875,5.368,876,5.368,877,4.059,878,4.059,879,4.059,880,4.059,881,4.059,882,3.483,883,4.059,884,4.059,885,4.059,886,4.059,887,4.059,888,4.059,889,4.059,890,4.059,891,4.059,892,4.059,893,4.059,894,4.059,895,4.059,896,4.059,897,4.059,898,4.059,899,4.059,900,4.059]],["title/modules.html",[17,2.179]],["body/modules.html",[8,0.015,12,0.012,13,0.015,14,0.012,16,3.415,17,2.135,26,3.141,27,3.141,28,3.141,29,3.141,30,3.141,31,3.141,32,2.913,882,6.316,901,7.36,902,7.36,903,7.36]],["title/overview.html",[904,4.304]],["body/overview.html",[2,0.982,8,0.019,12,0.008,13,0.011,14,0.008,15,0.982,16,5.017,17,1.342,18,1.342,19,1.506,20,1.506,21,1.342,22,1.506,23,1.506,24,2.651,25,2.651,26,4.435,27,4.018,28,4.018,29,4.018,30,4.018,31,4.018,32,3.84,33,2.167,34,1.506,35,1.506,84,2.881,96,2.651,97,2.651,99,3.329,100,3.329,119,1.271,123,3.583,156,1.709,198,3.84,215,2.651,216,2.651,217,2.651,286,3.84,299,2.651,300,2.651,301,2.651,330,1.205,406,3.84,419,2.651,420,2.651,421,2.651,488,2.363,532,3.84,545,2.651,546,2.651,547,2.651,599,3.84,612,2.651,613,2.651,614,2.651,695,2.651,696,2.651,697,2.651,904,2.651,905,4.446,906,3.09,907,3.09,908,3.09,909,3.09]],["title/miscellaneous/variables.html",[834,1.814,910,3.788]],["body/miscellaneous/variables.html",[8,0.02,12,0.005,13,0.008,14,0.005,41,2.107,57,4.829,61,1.33,66,0.191,77,0.775,110,2.29,113,1.785,130,0.919,145,1.479,146,1.078,161,2.105,162,1.815,163,1.554,164,1.848,203,1.898,220,2.52,236,3.887,237,3.207,264,1.785,265,1.823,304,2.52,357,1.815,372,1.446,373,1.233,374,3.2,384,1.233,424,2.52,501,2.52,550,2.52,617,2.52,700,2.52,750,1.785,760,1.785,766,1.785,767,1.785,768,1.785,769,1.785,770,1.785,773,1.785,774,1.785,777,1.785,809,1.785,834,1.233,910,1.785,911,2.08,912,2.08,913,2.08,914,2.08,915,2.08,916,3.295,917,2.08,918,2.08,919,2.08,920,5.397,921,6.6,922,6.421,923,5.397,924,5.397,925,2.08,926,2.08,927,3.295,928,2.08,929,3.295,930,3.295,931,2.08,932,2.08,933,2.08,934,2.08,935,2.08,936,2.08,937,2.08,938,2.08,939,4.092,940,4.092,941,2.08,942,2.08,943,2.08]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["0.21.1",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":908,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":750,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":906,"title":{},"body":{"overview.html":{}}}],["12",{"_index":907,"title":{},"body":{"overview.html":{}}}],["2.1.2",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["2.1.6",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["2.88.2",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["3.0.0",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["3600s",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{}}}],["4.0.0",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["5.10.19",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["5.10.3",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["5.2.2",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["5347y5467ytryert43523432ew",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":909,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":905,"title":{},"body":{"overview.html":{}}}],["8.3.0",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["_id},{$set",{"_index":258,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["access_token",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin",{"_index":838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amazing",{"_index":883,"title":{},"body":{"index.html":{}}}],["api",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["api:558484gnis@localhost:27017",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":334,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{}}}],["app",{"_index":860,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":851,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":16,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["atualizarcategoria",{"_index":170,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["atualizarcategoria(_id",{"_index":230,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["atualizarcategoria(updatecategoriadto",{"_index":175,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["atualizarcidade",{"_index":269,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["atualizarcidade(_id",{"_index":311,"title":{},"body":{"injectables/CidadesService.html":{}}}],["atualizarcidade(updatecidadedto",{"_index":274,"title":{},"body":{"controllers/CidadesController.html":{}}}],["atualizarestado",{"_index":390,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["atualizarestado(_id",{"_index":431,"title":{},"body":{"injectables/EstadosService.html":{}}}],["atualizarestado(updateestadodto",{"_index":395,"title":{},"body":{"controllers/EstadosController.html":{}}}],["atualizarstatus",{"_index":516,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["atualizarstatus(_id",{"_index":557,"title":{},"body":{"injectables/StatusService.html":{}}}],["atualizarstatus(updatestatusdto",{"_index":521,"title":{},"body":{"controllers/StatusController.html":{}}}],["atualizartipo",{"_index":583,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["atualizartipo(_id",{"_index":624,"title":{},"body":{"injectables/TiposService.html":{}}}],["atualizartipo(updatetipodto",{"_index":588,"title":{},"body":{"controllers/TiposController.html":{}}}],["atualizaruser",{"_index":661,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["atualizaruser(_id",{"_index":711,"title":{},"body":{"injectables/UsersService.html":{}}}],["atualizaruser(updateuserdto",{"_index":666,"title":{},"body":{"controllers/UsersController.html":{}}}],["auth.controller",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":452,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":64,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":453,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":454,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":477,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":26,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":893,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":84,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":372,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/LocalStrategy.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["axios",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":884,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":240,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(`categoria",{"_index":252,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["badrequestexception(`cidade",{"_index":325,"title":{},"body":{"injectables/CidadesService.html":{}}}],["badrequestexception(`estado",{"_index":445,"title":{},"body":{"injectables/EstadosService.html":{}}}],["badrequestexception(`status",{"_index":574,"title":{},"body":{"injectables/StatusService.html":{}}}],["badrequestexception(`tipo",{"_index":638,"title":{},"body":{"injectables/TiposService.html":{}}}],["badrequestexception(`usuario",{"_index":734,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["bcrypt(password",{"_index":713,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.compare(updateuserdto.password",{"_index":735,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.compare(userpassword",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":725,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(password",{"_index":751,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(updateuserdto.password",{"_index":738,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["body",{"_index":190,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":499,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":903,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":901,"title":{},"body":{"modules.html":{}}}],["building",{"_index":846,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":491,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":495,"title":{},"body":{"guards/RolesGuard.html":{}}}],["casl/ability",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["categoria",{"_index":155,"title":{"interfaces/Categoria.html":{}},"body":{"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"coverage.html":{}}}],["categoriacriado",{"_index":243,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["categoriacriado.save",{"_index":245,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["categorias",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categorias.controller",{"_index":219,"title":{},"body":{"modules/CategoriasModule.html":{}}}],["categorias.dto",{"_index":196,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["categorias.dto.ts",{"_index":332,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/UpdateCategoriaDto.html":{},"coverage.html":{}}}],["categorias.dto.ts:5",{"_index":335,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/UpdateCategoriaDto.html":{}}}],["categorias.dto.ts:7",{"_index":336,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/UpdateCategoriaDto.html":{}}}],["categorias.dto.ts:8",{"_index":333,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/UpdateCategoriaDto.html":{}}}],["categorias.dto.ts:9",{"_index":337,"title":{},"body":{"classes/CreateCategoriaDto.html":{}}}],["categorias.service",{"_index":199,"title":{},"body":{"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{}}}],["categorias/categorias.module",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriaschema",{"_index":220,"title":{},"body":{"modules/CategoriasModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoriascontroller",{"_index":166,"title":{"controllers/CategoriasController.html":{}},"body":{"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"coverage.html":{}}}],["categoriasmodel",{"_index":229,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["categoriasmodule",{"_index":27,"title":{"modules/CategoriasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriasModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriasservice",{"_index":198,"title":{"injectables/CategoriasService.html":{}},"body":{"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"coverage.html":{},"overview.html":{}}}],["cidade",{"_index":262,"title":{"interfaces/Cidade.html":{}},"body":{"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"coverage.html":{}}}],["cidadecriado",{"_index":320,"title":{},"body":{"injectables/CidadesService.html":{}}}],["cidadecriado.save",{"_index":322,"title":{},"body":{"injectables/CidadesService.html":{}}}],["cidades",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cidades.controller",{"_index":303,"title":{},"body":{"modules/CidadesModule.html":{}}}],["cidades.dto",{"_index":285,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["cidades.dto.ts",{"_index":340,"title":{},"body":{"classes/CreateCidadeDto.html":{},"classes/UpdateCidadeDto.html":{},"coverage.html":{}}}],["cidades.dto.ts:10",{"_index":342,"title":{},"body":{"classes/CreateCidadeDto.html":{},"classes/UpdateCidadeDto.html":{}}}],["cidades.dto.ts:11",{"_index":346,"title":{},"body":{"classes/CreateCidadeDto.html":{}}}],["cidades.dto.ts:5",{"_index":345,"title":{},"body":{"classes/CreateCidadeDto.html":{},"classes/UpdateCidadeDto.html":{}}}],["cidades.dto.ts:7",{"_index":344,"title":{},"body":{"classes/CreateCidadeDto.html":{},"classes/UpdateCidadeDto.html":{}}}],["cidades.dto.ts:9",{"_index":343,"title":{},"body":{"classes/CreateCidadeDto.html":{},"classes/UpdateCidadeDto.html":{}}}],["cidades.service",{"_index":287,"title":{},"body":{"controllers/CidadesController.html":{},"modules/CidadesModule.html":{}}}],["cidades/cidades.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["cidadeschema",{"_index":304,"title":{},"body":{"modules/CidadesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cidadescontroller",{"_index":266,"title":{"controllers/CidadesController.html":{}},"body":{"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"coverage.html":{}}}],["cidadesmodel",{"_index":310,"title":{},"body":{"injectables/CidadesService.html":{}}}],["cidadesmodule",{"_index":28,"title":{"modules/CidadesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CidadesModule.html":{},"modules.html":{},"overview.html":{}}}],["cidadesservice",{"_index":286,"title":{"injectables/CidadesService.html":{}},"body":{"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":11,"title":{"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":330,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriasmodule",{"_index":215,"title":{},"body":{"modules/CategoriasModule.html":{},"overview.html":{}}}],["cluster_categoriasmodule_exports",{"_index":216,"title":{},"body":{"modules/CategoriasModule.html":{},"overview.html":{}}}],["cluster_categoriasmodule_providers",{"_index":217,"title":{},"body":{"modules/CategoriasModule.html":{},"overview.html":{}}}],["cluster_cidadesmodule",{"_index":299,"title":{},"body":{"modules/CidadesModule.html":{},"overview.html":{}}}],["cluster_cidadesmodule_exports",{"_index":301,"title":{},"body":{"modules/CidadesModule.html":{},"overview.html":{}}}],["cluster_cidadesmodule_providers",{"_index":300,"title":{},"body":{"modules/CidadesModule.html":{},"overview.html":{}}}],["cluster_estadosmodule",{"_index":419,"title":{},"body":{"modules/EstadosModule.html":{},"overview.html":{}}}],["cluster_estadosmodule_exports",{"_index":421,"title":{},"body":{"modules/EstadosModule.html":{},"overview.html":{}}}],["cluster_estadosmodule_providers",{"_index":420,"title":{},"body":{"modules/EstadosModule.html":{},"overview.html":{}}}],["cluster_statusmodule",{"_index":545,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_exports",{"_index":547,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_providers",{"_index":546,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_tiposmodule",{"_index":612,"title":{},"body":{"modules/TiposModule.html":{},"overview.html":{}}}],["cluster_tiposmodule_exports",{"_index":613,"title":{},"body":{"modules/TiposModule.html":{},"overview.html":{}}}],["cluster_tiposmodule_providers",{"_index":614,"title":{},"body":{"modules/TiposModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":695,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":696,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":697,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["collection",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["com",{"_index":253,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["common/environment",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["common/role.enum",{"_index":385,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/User.html":{}}}],["common/roles.guard",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(doc",{"_index":248,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["console.log(error",{"_index":570,"title":{},"body":{"injectables/StatusService.html":{},"injectables/UsersService.html":{}}}],["console.log(user",{"_index":509,"title":{},"body":{"guards/RolesGuard.html":{}}}],["const",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["constants",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":479,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(categoriasmodel",{"_index":226,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["constructor(cidadesmodel",{"_index":308,"title":{},"body":{"injectables/CidadesService.html":{}}}],["constructor(estadosmodel",{"_index":428,"title":{},"body":{"injectables/EstadosService.html":{}}}],["constructor(private",{"_index":205,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":492,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(statusmodel",{"_index":554,"title":{},"body":{"injectables/StatusService.html":{}}}],["constructor(tiposmodel",{"_index":621,"title":{},"body":{"injectables/TiposService.html":{}}}],["constructor(usermodel",{"_index":708,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["consultarcategoria",{"_index":171,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["consultarcategoriakey",{"_index":172,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["consultarcategoriakey(@param('_id",{"_index":208,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["consultarcategoriakey(_id",{"_index":181,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["consultarcidade",{"_index":270,"title":{},"body":{"controllers/CidadesController.html":{}}}],["consultarcidadekey",{"_index":271,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["consultarcidadekey(@param('_id",{"_index":293,"title":{},"body":{"controllers/CidadesController.html":{}}}],["consultarcidadekey(_id",{"_index":278,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["consultarestado",{"_index":391,"title":{},"body":{"controllers/EstadosController.html":{}}}],["consultarestadokey",{"_index":392,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["consultarestadokey(@param('_id",{"_index":413,"title":{},"body":{"controllers/EstadosController.html":{}}}],["consultarestadokey(_id",{"_index":399,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["consultarstatus",{"_index":517,"title":{},"body":{"controllers/StatusController.html":{}}}],["consultarstatuskey",{"_index":518,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["consultarstatuskey(@param('_id",{"_index":539,"title":{},"body":{"controllers/StatusController.html":{}}}],["consultarstatuskey(_id",{"_index":525,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["consultartipo",{"_index":584,"title":{},"body":{"controllers/TiposController.html":{}}}],["consultartipokey",{"_index":585,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["consultartipokey(@param('_id",{"_index":606,"title":{},"body":{"controllers/TiposController.html":{}}}],["consultartipokey(_id",{"_index":592,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["consultartodoscategoria",{"_index":225,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["consultartodoscidade",{"_index":307,"title":{},"body":{"injectables/CidadesService.html":{}}}],["consultartodosestado",{"_index":427,"title":{},"body":{"injectables/EstadosService.html":{}}}],["consultartodosstatus",{"_index":553,"title":{},"body":{"injectables/StatusService.html":{}}}],["consultartodostipo",{"_index":620,"title":{},"body":{"injectables/TiposService.html":{}}}],["consultartodosusers",{"_index":706,"title":{},"body":{"injectables/UsersService.html":{}}}],["consultarusers",{"_index":662,"title":{},"body":{"controllers/UsersController.html":{}}}],["consultaruserskey",{"_index":663,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["consultaruserskey(@param('_id",{"_index":689,"title":{},"body":{"controllers/UsersController.html":{}}}],["consultaruserskey(_id",{"_index":671,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["consutaruseremail",{"_index":707,"title":{},"body":{"injectables/UsersService.html":{}}}],["consutaruseremail(email",{"_index":717,"title":{},"body":{"injectables/UsersService.html":{}}}],["context",{"_index":498,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":507,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":506,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":508,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('v1/categorias",{"_index":201,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["controller('v1/cidades",{"_index":289,"title":{},"body":{"controllers/CidadesController.html":{}}}],["controller('v1/estados",{"_index":409,"title":{},"body":{"controllers/EstadosController.html":{}}}],["controller('v1/status",{"_index":535,"title":{},"body":{"controllers/StatusController.html":{}}}],["controller('v1/tipos",{"_index":602,"title":{},"body":{"controllers/TiposController.html":{}}}],["controller('v1/users",{"_index":683,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":752,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createcategoriadto",{"_index":185,"title":{"classes/CreateCategoriaDto.html":{}},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"classes/CreateCategoriaDto.html":{},"coverage.html":{}}}],["createcidadedto",{"_index":281,"title":{"classes/CreateCidadeDto.html":{}},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"classes/CreateCidadeDto.html":{},"coverage.html":{}}}],["createdat",{"_index":161,"title":{},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["createestadodto",{"_index":347,"title":{"classes/CreateEstadoDto.html":{}},"body":{"classes/CreateEstadoDto.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"coverage.html":{}}}],["createstatusdto",{"_index":354,"title":{"classes/CreateStatusDto.html":{}},"body":{"classes/CreateStatusDto.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"coverage.html":{}}}],["createtipodto",{"_index":363,"title":{"classes/CreateTipoDto.html":{}},"body":{"classes/CreateTipoDto.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":369,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.password",{"_index":727,"title":{},"body":{"injectables/UsersService.html":{}}}],["criarcategoria",{"_index":173,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["criarcategoria(createcategoriadto",{"_index":184,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["criarcidade",{"_index":272,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["criarcidade(createcidadedto",{"_index":280,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["criarestado",{"_index":393,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["criarestado(createestadodto",{"_index":401,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["criarstatus",{"_index":519,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["criarstatus(createstatusdto",{"_index":527,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["criartipo",{"_index":586,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["criartipo(createtipodto",{"_index":594,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["criaruser",{"_index":664,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["criaruser(createuserdto",{"_index":673,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["date",{"_index":164,"title":{},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["date.now",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":236,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":703,"title":{},"body":{"modules/UsersModule.html":{}}}],["defined",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletarcategoria",{"_index":174,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["deletarcategoria(_id",{"_index":187,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["deletarcidade",{"_index":273,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["deletarcidade(_id",{"_index":283,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["deletarestado",{"_index":394,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["deletarestado(_id",{"_index":403,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["deletarstatus",{"_index":520,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["deletarstatus(_id",{"_index":529,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["deletartipo",{"_index":587,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["deletartipo(_id",{"_index":596,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["deletaruser",{"_index":665,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletaruser(_id",{"_index":675,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":193,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["delete('/:_id",{"_index":188,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["dependencies",{"_index":18,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":852,"title":{},"body":{"index.html":{}}}],["development",{"_index":861,"title":{},"body":{"index.html":{}}}],["doc",{"_index":247,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["document",{"_index":159,"title":{},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Estado.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["dtos/create",{"_index":195,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/update",{"_index":197,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":872,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":847,"title":{},"body":{"index.html":{}}}],["email",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["encontrado",{"_index":256,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["enumerations",{"_index":835,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.security.saltrounds",{"_index":726,"title":{},"body":{"injectables/UsersService.html":{}}}],["error",{"_index":246,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["estado",{"_index":341,"title":{"interfaces/Estado.html":{}},"body":{"classes/CreateCidadeDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"classes/UpdateCidadeDto.html":{},"coverage.html":{}}}],["estado_id",{"_index":264,"title":{},"body":{"interfaces/Cidade.html":{},"miscellaneous/variables.html":{}}}],["estadocriado",{"_index":440,"title":{},"body":{"injectables/EstadosService.html":{}}}],["estadocriado.save",{"_index":442,"title":{},"body":{"injectables/EstadosService.html":{}}}],["estados",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["estados.controller",{"_index":423,"title":{},"body":{"modules/EstadosModule.html":{}}}],["estados.dto",{"_index":405,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["estados.dto.ts",{"_index":349,"title":{},"body":{"classes/CreateEstadoDto.html":{},"classes/UpdateEstadoDto.html":{},"coverage.html":{}}}],["estados.dto.ts:5",{"_index":352,"title":{},"body":{"classes/CreateEstadoDto.html":{},"classes/UpdateEstadoDto.html":{}}}],["estados.dto.ts:7",{"_index":351,"title":{},"body":{"classes/CreateEstadoDto.html":{},"classes/UpdateEstadoDto.html":{}}}],["estados.dto.ts:8",{"_index":350,"title":{},"body":{"classes/CreateEstadoDto.html":{},"classes/UpdateEstadoDto.html":{}}}],["estados.dto.ts:9",{"_index":353,"title":{},"body":{"classes/CreateEstadoDto.html":{}}}],["estados.service",{"_index":407,"title":{},"body":{"controllers/EstadosController.html":{},"modules/EstadosModule.html":{}}}],["estados/estados.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["estadoschema",{"_index":424,"title":{},"body":{"modules/EstadosModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["estadoscontroller",{"_index":387,"title":{"controllers/EstadosController.html":{}},"body":{"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"coverage.html":{}}}],["estadosmodel",{"_index":430,"title":{},"body":{"injectables/EstadosService.html":{}}}],["estadosmodule",{"_index":29,"title":{"modules/EstadosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EstadosModule.html":{},"modules.html":{},"overview.html":{}}}],["estadosservice",{"_index":406,"title":{"injectables/EstadosService.html":{}},"body":{"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"coverage.html":{},"overview.html":{}}}],["executioncontext",{"_index":496,"title":{},"body":{"guards/RolesGuard.html":{}}}],["expiresin",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":158,"title":{},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Estado.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"interfaces/User.html":{}}}],["extractjwt",{"_index":460,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":468,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["flatted",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["framework",{"_index":845,"title":{},"body":{"index.html":{}}}],["fs",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["function",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":839,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:_id",{"_index":182,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["getting",{"_index":841,"title":{"index.html":{}},"body":{}}],["grow",{"_index":879,"title":{},"body":{"index.html":{}}}],["guard",{"_index":488,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":489,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hash",{"_index":724,"title":{},"body":{"injectables/UsersService.html":{}}}],["here",{"_index":890,"title":{},"body":{"index.html":{}}}],["https",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["https://nestjs.com",{"_index":897,"title":{},"body":{"index.html":{}}}],["id",{"_index":471,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["identifier",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["if(!categoriacriado",{"_index":250,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["if(!cidadecriado",{"_index":324,"title":{},"body":{"injectables/CidadesService.html":{}}}],["if(!estadocriado",{"_index":444,"title":{},"body":{"injectables/EstadosService.html":{}}}],["if(!statusencontrado",{"_index":573,"title":{},"body":{"injectables/StatusService.html":{}}}],["if(!tipocriado",{"_index":637,"title":{},"body":{"injectables/TiposService.html":{}}}],["if(!user",{"_index":487,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["if(!userencontrado",{"_index":733,"title":{},"body":{"injectables/UsersService.html":{}}}],["if(!vinculoencontrado",{"_index":744,"title":{},"body":{"injectables/UsersService.html":{}}}],["if(error",{"_index":569,"title":{},"body":{"injectables/StatusService.html":{},"injectables/UsersService.html":{}}}],["if(ismatch",{"_index":737,"title":{},"body":{"injectables/UsersService.html":{}}}],["if(user",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignoreexpiration",{"_index":469,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":503,"title":{},"body":{"guards/RolesGuard.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":66,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":118,"title":{"injectables/AuthService.html":{},"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":241,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["injectmodel('categoria",{"_index":242,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["injectmodel('cidade",{"_index":319,"title":{},"body":{"injectables/CidadesService.html":{}}}],["injectmodel('estado",{"_index":439,"title":{},"body":{"injectables/EstadosService.html":{}}}],["injectmodel('status",{"_index":565,"title":{},"body":{"injectables/StatusService.html":{}}}],["injectmodel('tipo",{"_index":632,"title":{},"body":{"injectables/TiposService.html":{}}}],["injectmodel('user",{"_index":723,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":857,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":859,"title":{},"body":{"index.html":{}}}],["interface",{"_index":154,"title":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Estado.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"interfaces/User.html":{}},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Estado.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":156,"title":{},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Estado.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/categorias.interface",{"_index":200,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["interfaces/categorias.schema",{"_index":221,"title":{},"body":{"modules/CategoriasModule.html":{}}}],["interfaces/cidades.interface",{"_index":288,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["interfaces/cidades.schema",{"_index":305,"title":{},"body":{"modules/CidadesModule.html":{}}}],["interfaces/estados.interface",{"_index":408,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["interfaces/estados.schema",{"_index":425,"title":{},"body":{"modules/EstadosModule.html":{}}}],["interfaces/status.interface",{"_index":534,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["interfaces/status.schema",{"_index":551,"title":{},"body":{"modules/StatusModule.html":{}}}],["interfaces/tipos.interface",{"_index":601,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["interfaces/tipos.schema",{"_index":618,"title":{},"body":{"modules/TiposModule.html":{}}}],["interfaces/user.interface",{"_index":680,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["interfaces/user.schema",{"_index":701,"title":{},"body":{"modules/UsersModule.html":{}}}],["ismatch",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["join",{"_index":886,"title":{},"body":{"index.html":{}}}],["json.stringify(updatecategoriadto",{"_index":212,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["json.stringify(updatecidadedto",{"_index":296,"title":{},"body":{"controllers/CidadesController.html":{}}}],["json.stringify(updateestadodto",{"_index":416,"title":{},"body":{"controllers/EstadosController.html":{}}}],["json.stringify(updatestatusdto",{"_index":542,"title":{},"body":{"controllers/StatusController.html":{}}}],["json.stringify(updatetipodto",{"_index":609,"title":{},"body":{"controllers/TiposController.html":{}}}],["json.stringify(updateuserdto",{"_index":692,"title":{},"body":{"controllers/UsersController.html":{}}}],["jwt",{"_index":463,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":450,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":467,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":99,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":894,"title":{},"body":{"index.html":{}}}],["legend",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":900,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":876,"title":{},"body":{"index.html":{}}}],["local",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":86,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstorage",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["localstrategy",{"_index":100,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":191,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["logger(categoriascontroller.name",{"_index":204,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["logger(categoriasservice.name",{"_index":238,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["logger(cidadescontroller.name",{"_index":290,"title":{},"body":{"controllers/CidadesController.html":{}}}],["logger(cidadesservice.name",{"_index":317,"title":{},"body":{"injectables/CidadesService.html":{}}}],["logger(estadoscontroller.name",{"_index":410,"title":{},"body":{"controllers/EstadosController.html":{}}}],["logger(estadosservice.name",{"_index":437,"title":{},"body":{"injectables/EstadosService.html":{}}}],["logger(statuscontroller.name",{"_index":536,"title":{},"body":{"controllers/StatusController.html":{}}}],["logger(statusservice.name",{"_index":563,"title":{},"body":{"injectables/StatusService.html":{}}}],["logger(tiposcontroller.name",{"_index":603,"title":{},"body":{"controllers/TiposController.html":{}}}],["logger(tiposservice.name",{"_index":630,"title":{},"body":{"injectables/TiposService.html":{}}}],["logger(userscontroller.name",{"_index":684,"title":{},"body":{"controllers/UsersController.html":{}}}],["logger(usersservice.name",{"_index":721,"title":{},"body":{"injectables/UsersService.html":{}}}],["login",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":834,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":875,"title":{},"body":{"index.html":{}}}],["mode",{"_index":865,"title":{},"body":{"index.html":{}}}],["model",{"_index":227,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":15,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":17,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb://localhost:27017",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb://musiclounge",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":165,"title":{},"body":{"interfaces/Categoria.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"injectables/CidadesService.html":{},"interfaces/Estado.html":{},"injectables/EstadosService.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"injectables/TiposService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema.types.objectid",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":222,"title":{},"body":{"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot(`${environment.db.url}/musiclounge",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":889,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":895,"title":{},"body":{"index.html":{}}}],["name",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":853,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":899,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":338,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["new",{"_index":203,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/LocalStrategy.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":844,"title":{},"body":{"index.html":{}}}],["nome",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":858,"title":{},"body":{"index.html":{}}}],["null",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["não",{"_index":255,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["o",{"_index":254,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":475,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["open",{"_index":877,"title":{},"body":{"index.html":{}}}],["optional",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":904,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":780,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":192,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["param('_id",{"_index":210,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["passport",{"_index":462,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["passportmodule.register",{"_index":702,"title":{},"body":{"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":464,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":465,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":373,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["passwordfield",{"_index":485,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["payload",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":473,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":472,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":887,"title":{},"body":{"index.html":{}}}],["populate('tipo').populate('status').exec",{"_index":747,"title":{},"body":{"injectables/UsersService.html":{}}}],["post",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["post('v1/auth/login",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":168,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process.env.db_url",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.salt_rounds",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":867,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":843,"title":{},"body":{"index.html":{}}}],["project",{"_index":878,"title":{},"body":{"index.html":{}}}],["promise",{"_index":179,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/LocalStrategy.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":160,"title":{},"body":{"interfaces/Categoria.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"injectables/EstadosService.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["provide",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["put",{"_index":194,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["put('/:_id",{"_index":177,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["qs",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["querystring",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":888,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":202,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ref",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":493,"title":{},"body":{"guards/RolesGuard.html":{}}}],["repository",{"_index":856,"title":{},"body":{"index.html":{}}}],["req",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["required",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiredroles",{"_index":504,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":510,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":384,"title":{},"body":{"classes/CreateUserDto.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.enum",{"_index":500,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles",{"_index":374,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles.decorator",{"_index":502,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles_key",{"_index":501,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":52,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["run",{"_index":862,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":476,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"dependencies.html":{}}}],["saltorrounds",{"_index":749,"title":{},"body":{"injectables/UsersService.html":{}}}],["saltrounds",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalable",{"_index":848,"title":{},"body":{"index.html":{}}}],["schema",{"_index":223,"title":{},"body":{"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{}}}],["secret",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":470,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":809,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":849,"title":{},"body":{"index.html":{}}}],["session",{"_index":704,"title":{},"body":{"modules/UsersModule.html":{}}}],["setmetadata(roles_key",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":850,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":881,"title":{},"body":{"index.html":{}}}],["src/.../categorias.schema.ts",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cidades.schema.ts",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../estados.schema.ts",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":840,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.enum.ts",{"_index":836,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status.schema.ts",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tipos.schema.ts",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:14",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":451,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":455,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":459,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":457,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":474,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":478,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:15",{"_index":482,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:7",{"_index":480,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/categorias/categorias.controller.ts",{"_index":167,"title":{},"body":{"controllers/CategoriasController.html":{},"coverage.html":{}}}],["src/categorias/categorias.controller.ts:15",{"_index":186,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/categorias/categorias.controller.ts:22",{"_index":180,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/categorias/categorias.controller.ts:27",{"_index":183,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/categorias/categorias.controller.ts:32",{"_index":178,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/categorias/categorias.controller.ts:41",{"_index":189,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/categorias/categorias.module.ts",{"_index":218,"title":{},"body":{"modules/CategoriasModule.html":{}}}],["src/categorias/categorias.service.ts",{"_index":224,"title":{},"body":{"injectables/CategoriasService.html":{},"coverage.html":{}}}],["src/categorias/categorias.service.ts:15",{"_index":239,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/categorias.service.ts:17",{"_index":234,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/categorias.service.ts:24",{"_index":231,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/categorias.service.ts:32",{"_index":233,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/categorias.service.ts:36",{"_index":232,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/categorias.service.ts:44",{"_index":235,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/categorias.service.ts:9",{"_index":228,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/dtos/create",{"_index":331,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"coverage.html":{}}}],["src/categorias/dtos/update",{"_index":643,"title":{},"body":{"classes/UpdateCategoriaDto.html":{},"coverage.html":{}}}],["src/categorias/interfaces/categorias.interface.ts",{"_index":157,"title":{},"body":{"interfaces/Categoria.html":{},"coverage.html":{}}}],["src/categorias/interfaces/categorias.schema.ts",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cidades/cidades.controller.ts",{"_index":267,"title":{},"body":{"controllers/CidadesController.html":{},"coverage.html":{}}}],["src/cidades/cidades.controller.ts:15",{"_index":282,"title":{},"body":{"controllers/CidadesController.html":{}}}],["src/cidades/cidades.controller.ts:22",{"_index":277,"title":{},"body":{"controllers/CidadesController.html":{}}}],["src/cidades/cidades.controller.ts:27",{"_index":279,"title":{},"body":{"controllers/CidadesController.html":{}}}],["src/cidades/cidades.controller.ts:32",{"_index":276,"title":{},"body":{"controllers/CidadesController.html":{}}}],["src/cidades/cidades.controller.ts:41",{"_index":284,"title":{},"body":{"controllers/CidadesController.html":{}}}],["src/cidades/cidades.module.ts",{"_index":302,"title":{},"body":{"modules/CidadesModule.html":{}}}],["src/cidades/cidades.service.ts",{"_index":306,"title":{},"body":{"injectables/CidadesService.html":{},"coverage.html":{}}}],["src/cidades/cidades.service.ts:15",{"_index":318,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/cidades.service.ts:17",{"_index":315,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/cidades.service.ts:24",{"_index":312,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/cidades.service.ts:32",{"_index":314,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/cidades.service.ts:36",{"_index":313,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/cidades.service.ts:44",{"_index":316,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/cidades.service.ts:9",{"_index":309,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/dtos/create",{"_index":339,"title":{},"body":{"classes/CreateCidadeDto.html":{},"coverage.html":{}}}],["src/cidades/dtos/update",{"_index":644,"title":{},"body":{"classes/UpdateCidadeDto.html":{},"coverage.html":{}}}],["src/cidades/interfaces/cidades.interface.ts",{"_index":263,"title":{},"body":{"interfaces/Cidade.html":{},"coverage.html":{}}}],["src/cidades/interfaces/cidades.schema.ts",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/environment.ts",{"_index":768,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/role.enum",{"_index":682,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/common/role.enum.ts",{"_index":837,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/roles.decorator",{"_index":681,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/common/roles.decorator.ts",{"_index":769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/roles.guard.ts",{"_index":490,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/roles.guard.ts:10",{"_index":497,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/roles.guard.ts:7",{"_index":494,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/estados/dtos/create",{"_index":348,"title":{},"body":{"classes/CreateEstadoDto.html":{},"coverage.html":{}}}],["src/estados/dtos/update",{"_index":645,"title":{},"body":{"classes/UpdateEstadoDto.html":{},"coverage.html":{}}}],["src/estados/estados.controller.ts",{"_index":388,"title":{},"body":{"controllers/EstadosController.html":{},"coverage.html":{}}}],["src/estados/estados.controller.ts:15",{"_index":402,"title":{},"body":{"controllers/EstadosController.html":{}}}],["src/estados/estados.controller.ts:22",{"_index":398,"title":{},"body":{"controllers/EstadosController.html":{}}}],["src/estados/estados.controller.ts:27",{"_index":400,"title":{},"body":{"controllers/EstadosController.html":{}}}],["src/estados/estados.controller.ts:32",{"_index":397,"title":{},"body":{"controllers/EstadosController.html":{}}}],["src/estados/estados.controller.ts:41",{"_index":404,"title":{},"body":{"controllers/EstadosController.html":{}}}],["src/estados/estados.module.ts",{"_index":422,"title":{},"body":{"modules/EstadosModule.html":{}}}],["src/estados/estados.service.ts",{"_index":426,"title":{},"body":{"injectables/EstadosService.html":{},"coverage.html":{}}}],["src/estados/estados.service.ts:15",{"_index":438,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/estados.service.ts:17",{"_index":435,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/estados.service.ts:24",{"_index":432,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/estados.service.ts:32",{"_index":434,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/estados.service.ts:36",{"_index":433,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/estados.service.ts:44",{"_index":436,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/estados.service.ts:9",{"_index":429,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/interfaces/estados.interface.ts",{"_index":386,"title":{},"body":{"interfaces/Estado.html":{},"coverage.html":{}}}],["src/estados/interfaces/estados.schema.ts",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/status/dtos/create",{"_index":355,"title":{},"body":{"classes/CreateStatusDto.html":{},"coverage.html":{}}}],["src/status/dtos/update",{"_index":646,"title":{},"body":{"classes/UpdateStatusDto.html":{},"coverage.html":{}}}],["src/status/interfaces/status.interface.ts",{"_index":512,"title":{},"body":{"interfaces/Status.html":{},"coverage.html":{}}}],["src/status/interfaces/status.schema.ts",{"_index":773,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/status/status.controller.ts",{"_index":514,"title":{},"body":{"controllers/StatusController.html":{},"coverage.html":{}}}],["src/status/status.controller.ts:15",{"_index":528,"title":{},"body":{"controllers/StatusController.html":{}}}],["src/status/status.controller.ts:22",{"_index":524,"title":{},"body":{"controllers/StatusController.html":{}}}],["src/status/status.controller.ts:27",{"_index":526,"title":{},"body":{"controllers/StatusController.html":{}}}],["src/status/status.controller.ts:32",{"_index":523,"title":{},"body":{"controllers/StatusController.html":{}}}],["src/status/status.controller.ts:41",{"_index":530,"title":{},"body":{"controllers/StatusController.html":{}}}],["src/status/status.module.ts",{"_index":548,"title":{},"body":{"modules/StatusModule.html":{}}}],["src/status/status.service.ts",{"_index":552,"title":{},"body":{"injectables/StatusService.html":{},"coverage.html":{}}}],["src/status/status.service.ts:15",{"_index":564,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/status/status.service.ts:17",{"_index":561,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/status/status.service.ts:29",{"_index":558,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/status/status.service.ts:37",{"_index":560,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/status/status.service.ts:41",{"_index":559,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/status/status.service.ts:49",{"_index":562,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/status/status.service.ts:9",{"_index":555,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/tipos/dtos/create",{"_index":364,"title":{},"body":{"classes/CreateTipoDto.html":{},"coverage.html":{}}}],["src/tipos/dtos/update",{"_index":647,"title":{},"body":{"classes/UpdateTipoDto.html":{},"coverage.html":{}}}],["src/tipos/interfaces/tipos.interface",{"_index":362,"title":{},"body":{"classes/CreateStatusDto.html":{},"interfaces/Status.html":{},"classes/UpdateStatusDto.html":{}}}],["src/tipos/interfaces/tipos.interface.ts",{"_index":579,"title":{},"body":{"interfaces/Tipo.html":{},"coverage.html":{}}}],["src/tipos/interfaces/tipos.schema.ts",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tipos/tipos.controller.ts",{"_index":581,"title":{},"body":{"controllers/TiposController.html":{},"coverage.html":{}}}],["src/tipos/tipos.controller.ts:15",{"_index":595,"title":{},"body":{"controllers/TiposController.html":{}}}],["src/tipos/tipos.controller.ts:22",{"_index":591,"title":{},"body":{"controllers/TiposController.html":{}}}],["src/tipos/tipos.controller.ts:27",{"_index":593,"title":{},"body":{"controllers/TiposController.html":{}}}],["src/tipos/tipos.controller.ts:32",{"_index":590,"title":{},"body":{"controllers/TiposController.html":{}}}],["src/tipos/tipos.controller.ts:41",{"_index":597,"title":{},"body":{"controllers/TiposController.html":{}}}],["src/tipos/tipos.module.ts",{"_index":615,"title":{},"body":{"modules/TiposModule.html":{}}}],["src/tipos/tipos.service.ts",{"_index":619,"title":{},"body":{"injectables/TiposService.html":{},"coverage.html":{}}}],["src/tipos/tipos.service.ts:15",{"_index":631,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/tipos/tipos.service.ts:17",{"_index":628,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/tipos/tipos.service.ts:24",{"_index":625,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/tipos/tipos.service.ts:32",{"_index":627,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/tipos/tipos.service.ts:36",{"_index":626,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/tipos/tipos.service.ts:44",{"_index":629,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/tipos/tipos.service.ts:9",{"_index":622,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/users/dtos/create",{"_index":370,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/update",{"_index":649,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/interfaces/user.interface.ts",{"_index":657,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/users/interfaces/user.schema.ts",{"_index":777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts",{"_index":659,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:19",{"_index":674,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:27",{"_index":670,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:33",{"_index":672,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:39",{"_index":668,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:49",{"_index":677,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":698,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":705,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":709,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":722,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":719,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":712,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:49",{"_index":715,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:53",{"_index":716,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:61",{"_index":718,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:65",{"_index":720,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:73",{"_index":714,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":863,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":866,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":868,"title":{},"body":{"index.html":{}}}],["started",{"_index":842,"title":{"index.html":{}},"body":{}}],["starter",{"_index":855,"title":{},"body":{"index.html":{}}}],["statements",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":162,"title":{"interfaces/Status.html":{}},"body":{"interfaces/Categoria.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["status.controller",{"_index":549,"title":{},"body":{"modules/StatusModule.html":{}}}],["status.dto",{"_index":531,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["status.dto.ts",{"_index":356,"title":{},"body":{"classes/CreateStatusDto.html":{},"classes/UpdateStatusDto.html":{},"coverage.html":{}}}],["status.dto.ts:10",{"_index":361,"title":{},"body":{"classes/CreateStatusDto.html":{}}}],["status.dto.ts:6",{"_index":359,"title":{},"body":{"classes/CreateStatusDto.html":{},"classes/UpdateStatusDto.html":{}}}],["status.dto.ts:8",{"_index":360,"title":{},"body":{"classes/CreateStatusDto.html":{},"classes/UpdateStatusDto.html":{}}}],["status.dto.ts:9",{"_index":358,"title":{},"body":{"classes/CreateStatusDto.html":{},"classes/UpdateStatusDto.html":{}}}],["status.service",{"_index":533,"title":{},"body":{"controllers/StatusController.html":{},"modules/StatusModule.html":{}}}],["status/status.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["statuscontroller",{"_index":513,"title":{"controllers/StatusController.html":{}},"body":{"controllers/StatusController.html":{},"modules/StatusModule.html":{},"coverage.html":{}}}],["statusencontrado",{"_index":571,"title":{},"body":{"injectables/StatusService.html":{}}}],["statusmodel",{"_index":556,"title":{},"body":{"injectables/StatusService.html":{}}}],["statusmodule",{"_index":30,"title":{"modules/StatusModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules.html":{},"overview.html":{}}}],["statusschema",{"_index":550,"title":{},"body":{"modules/StatusModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statusservice",{"_index":532,"title":{"injectables/StatusService.html":{}},"body":{"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"coverage.html":{},"overview.html":{}}}],["stay",{"_index":891,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":461,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":466,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":882,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":902,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":871,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":874,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":873,"title":{},"body":{"index.html":{}}}],["tests",{"_index":870,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":880,"title":{},"body":{"index.html":{}}}],["this.authservice.login(req.user",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validadeuser(email",{"_index":486,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.categoriasmodel(createcategoriadto",{"_index":244,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["this.categoriasmodel.deleteone({_id}).exec",{"_index":261,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["this.categoriasmodel.find().exec",{"_index":260,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["this.categoriasmodel.findone({_id}).exec",{"_index":249,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["this.categoriasmodel.findoneandupdate({_id",{"_index":257,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["this.categoriasservice.atualizarcategoria(_id,updatecategoriadto",{"_index":213,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.categoriasservice.consultarcategoriakey(_id",{"_index":209,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.categoriasservice.consultartodoscategoria",{"_index":207,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.categoriasservice.criarcategoria(createcategoriadto",{"_index":206,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.categoriasservice.deletarcategoria(_id",{"_index":214,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.cidadesmodel(createcidadedto",{"_index":321,"title":{},"body":{"injectables/CidadesService.html":{}}}],["this.cidadesmodel.deleteone({_id}).exec",{"_index":329,"title":{},"body":{"injectables/CidadesService.html":{}}}],["this.cidadesmodel.find().exec",{"_index":328,"title":{},"body":{"injectables/CidadesService.html":{}}}],["this.cidadesmodel.findone({_id}).exec",{"_index":323,"title":{},"body":{"injectables/CidadesService.html":{}}}],["this.cidadesmodel.findoneandupdate({_id",{"_index":326,"title":{},"body":{"injectables/CidadesService.html":{}}}],["this.cidadesservice.atualizarcidade(_id,updatecidadedto",{"_index":297,"title":{},"body":{"controllers/CidadesController.html":{}}}],["this.cidadesservice.consultarcidadekey(_id",{"_index":294,"title":{},"body":{"controllers/CidadesController.html":{}}}],["this.cidadesservice.consultartodoscidade",{"_index":292,"title":{},"body":{"controllers/CidadesController.html":{}}}],["this.cidadesservice.criarcidade(createcidadedto",{"_index":291,"title":{},"body":{"controllers/CidadesController.html":{}}}],["this.cidadesservice.deletarcidade(_id",{"_index":298,"title":{},"body":{"controllers/CidadesController.html":{}}}],["this.estadosmodel(createestadodto",{"_index":441,"title":{},"body":{"injectables/EstadosService.html":{}}}],["this.estadosmodel.deleteone({_id}).exec",{"_index":449,"title":{},"body":{"injectables/EstadosService.html":{}}}],["this.estadosmodel.find().exec",{"_index":448,"title":{},"body":{"injectables/EstadosService.html":{}}}],["this.estadosmodel.findone({_id}).exec",{"_index":443,"title":{},"body":{"injectables/EstadosService.html":{}}}],["this.estadosmodel.findoneandupdate({_id",{"_index":446,"title":{},"body":{"injectables/EstadosService.html":{}}}],["this.estadosservice.atualizarestado(_id,updateestadodto",{"_index":417,"title":{},"body":{"controllers/EstadosController.html":{}}}],["this.estadosservice.consultarestadokey(_id",{"_index":414,"title":{},"body":{"controllers/EstadosController.html":{}}}],["this.estadosservice.consultartodosestado",{"_index":412,"title":{},"body":{"controllers/EstadosController.html":{}}}],["this.estadosservice.criarestado(createestadodto",{"_index":411,"title":{},"body":{"controllers/EstadosController.html":{}}}],["this.estadosservice.deletarestado(_id",{"_index":418,"title":{},"body":{"controllers/EstadosController.html":{}}}],["this.jwtservice.sign(payload",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`updatecategoriadto",{"_index":211,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.logger.log(`updatecidadedto",{"_index":295,"title":{},"body":{"controllers/CidadesController.html":{}}}],["this.logger.log(`updateestadodto",{"_index":415,"title":{},"body":{"controllers/EstadosController.html":{}}}],["this.logger.log(`updatestatusdto",{"_index":541,"title":{},"body":{"controllers/StatusController.html":{}}}],["this.logger.log(`updatetipodto",{"_index":608,"title":{},"body":{"controllers/TiposController.html":{}}}],["this.logger.log(`updateuserdto",{"_index":691,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":505,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.statusmodel(createstatusdto",{"_index":567,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.statusmodel.deleteone({_id}).exec",{"_index":578,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.statusmodel.find().exec",{"_index":577,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.statusmodel.findone({_id}).exec",{"_index":572,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.statusmodel.findoneandupdate({_id",{"_index":575,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.statusservice.atualizarstatus(_id,updatestatusdto",{"_index":543,"title":{},"body":{"controllers/StatusController.html":{}}}],["this.statusservice.consultarstatuskey(_id",{"_index":540,"title":{},"body":{"controllers/StatusController.html":{}}}],["this.statusservice.consultartodosstatus",{"_index":538,"title":{},"body":{"controllers/StatusController.html":{}}}],["this.statusservice.criarstatus(createstatusdto",{"_index":537,"title":{},"body":{"controllers/StatusController.html":{}}}],["this.statusservice.deletarstatus(_id",{"_index":544,"title":{},"body":{"controllers/StatusController.html":{}}}],["this.tiposmodel(createtipodto",{"_index":634,"title":{},"body":{"injectables/TiposService.html":{}}}],["this.tiposmodel.deleteone({_id}).exec",{"_index":642,"title":{},"body":{"injectables/TiposService.html":{}}}],["this.tiposmodel.find().exec",{"_index":641,"title":{},"body":{"injectables/TiposService.html":{}}}],["this.tiposmodel.findone({_id}).exec",{"_index":636,"title":{},"body":{"injectables/TiposService.html":{}}}],["this.tiposmodel.findoneandupdate({_id",{"_index":639,"title":{},"body":{"injectables/TiposService.html":{}}}],["this.tiposservice.atualizartipo(_id,updatetipodto",{"_index":610,"title":{},"body":{"controllers/TiposController.html":{}}}],["this.tiposservice.consultartipokey(_id",{"_index":607,"title":{},"body":{"controllers/TiposController.html":{}}}],["this.tiposservice.consultartodostipo",{"_index":605,"title":{},"body":{"controllers/TiposController.html":{}}}],["this.tiposservice.criartipo(createtipodto",{"_index":604,"title":{},"body":{"controllers/TiposController.html":{}}}],["this.tiposservice.deletartipo(_id",{"_index":611,"title":{},"body":{"controllers/TiposController.html":{}}}],["this.usermodel(createuserdto",{"_index":729,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.deleteone({_id}).exec",{"_index":748,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().populate('tipo').populate('status').exec",{"_index":742,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":746,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone({_id}).exec",{"_index":732,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone({_id}).populate('tipo').populate('status').exec",{"_index":745,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findoneandupdate({_id",{"_index":740,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.consutaruseremail(useremail",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usuariosservice.atualizaruser(_id,updateuserdto",{"_index":693,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usuariosservice.consultartodosusers",{"_index":688,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usuariosservice.consultaruserskey(_id",{"_index":690,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usuariosservice.criaruser(createuserdto",{"_index":687,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usuariosservice.deletaruser(_id",{"_index":694,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":251,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/LocalStrategy.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["timestamps",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tipo",{"_index":357,"title":{"interfaces/Tipo.html":{}},"body":{"classes/CreateStatusDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tipocriado",{"_index":633,"title":{},"body":{"injectables/TiposService.html":{}}}],["tipocriado.save",{"_index":635,"title":{},"body":{"injectables/TiposService.html":{}}}],["tipos",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tipos.controller",{"_index":616,"title":{},"body":{"modules/TiposModule.html":{}}}],["tipos.dto",{"_index":598,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["tipos.dto.ts",{"_index":365,"title":{},"body":{"classes/CreateTipoDto.html":{},"classes/UpdateTipoDto.html":{},"coverage.html":{}}}],["tipos.dto.ts:5",{"_index":367,"title":{},"body":{"classes/CreateTipoDto.html":{},"classes/UpdateTipoDto.html":{}}}],["tipos.dto.ts:6",{"_index":366,"title":{},"body":{"classes/CreateTipoDto.html":{},"classes/UpdateTipoDto.html":{}}}],["tipos.dto.ts:7",{"_index":368,"title":{},"body":{"classes/CreateTipoDto.html":{}}}],["tipos.service",{"_index":600,"title":{},"body":{"controllers/TiposController.html":{},"modules/TiposModule.html":{}}}],["tipos/tipos.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["tiposchema",{"_index":617,"title":{},"body":{"modules/TiposModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tiposcontroller",{"_index":580,"title":{"controllers/TiposController.html":{}},"body":{"controllers/TiposController.html":{},"modules/TiposModule.html":{},"coverage.html":{}}}],["tiposmodel",{"_index":623,"title":{},"body":{"injectables/TiposService.html":{}}}],["tiposmodule",{"_index":31,"title":{"modules/TiposModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TiposModule.html":{},"modules.html":{},"overview.html":{}}}],["tiposservice",{"_index":599,"title":{"injectables/TiposService.html":{}},"body":{"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"coverage.html":{},"overview.html":{}}}],["touch",{"_index":892,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":898,"title":{},"body":{"index.html":{}}}],["type",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/bcrypt",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["types/cookiejar",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["types/mongoose",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["types/uuid",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":854,"title":{},"body":{"index.html":{}}}],["uf",{"_index":265,"title":{},"body":{"interfaces/Cidade.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"interfaces/Estado.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":483,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unique",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":869,"title":{},"body":{"index.html":{}}}],["updatecategoriadto",{"_index":176,"title":{"classes/UpdateCategoriaDto.html":{}},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"classes/UpdateCategoriaDto.html":{},"coverage.html":{}}}],["updatecategoriadto}).exec",{"_index":259,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["updatecidadedto",{"_index":275,"title":{"classes/UpdateCidadeDto.html":{}},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"classes/UpdateCidadeDto.html":{},"coverage.html":{}}}],["updatecidadedto}).exec",{"_index":327,"title":{},"body":{"injectables/CidadesService.html":{}}}],["updatedat",{"_index":163,"title":{},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["updateestadodto",{"_index":396,"title":{"classes/UpdateEstadoDto.html":{}},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"classes/UpdateEstadoDto.html":{},"coverage.html":{}}}],["updateestadodto}).exec",{"_index":447,"title":{},"body":{"injectables/EstadosService.html":{}}}],["updatestatusdto",{"_index":522,"title":{"classes/UpdateStatusDto.html":{}},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{},"classes/UpdateStatusDto.html":{},"coverage.html":{}}}],["updatestatusdto}).exec",{"_index":576,"title":{},"body":{"injectables/StatusService.html":{}}}],["updatetipodto",{"_index":589,"title":{"classes/UpdateTipoDto.html":{}},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{},"classes/UpdateTipoDto.html":{},"coverage.html":{}}}],["updatetipodto}).exec",{"_index":640,"title":{},"body":{"injectables/TiposService.html":{}}}],["updateuserdto",{"_index":648,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto.password",{"_index":739,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto}).populate('tipo').populate('status').exec",{"_index":741,"title":{},"body":{"injectables/UsersService.html":{}}}],["url",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["usecreateindex",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["usefindandmodify",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/EstadosController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":686,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@delete('/:_id",{"_index":676,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":669,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@put('/:_id",{"_index":667,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('v1/auth/login",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{}}}],["usenewurlparser",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":128,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.dto",{"_index":678,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":371,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":377,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:11",{"_index":653,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":379,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:13",{"_index":656,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:14",{"_index":382,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:15",{"_index":655,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:16",{"_index":381,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":654,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:18",{"_index":380,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:19",{"_index":376,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":383,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":650,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":375,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":652,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":378,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":651,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles?.includes(role",{"_index":511,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.sub",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercriado",{"_index":728,"title":{},"body":{"injectables/UsersService.html":{}}}],["usercriado.save",{"_index":730,"title":{},"body":{"injectables/UsersService.html":{}}}],["useremail",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["userencontrado",{"_index":731,"title":{},"body":{"injectables/UsersService.html":{}}}],["userencontrado.password",{"_index":736,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":710,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernamefield",{"_index":484,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpassword",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users.controller",{"_index":699,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":679,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":700,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":658,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":32,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":123,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["usuariosservice",{"_index":685,"title":{},"body":{"controllers/UsersController.html":{}}}],["uuid",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["v1/categorias",{"_index":169,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["v1/cidades",{"_index":268,"title":{},"body":{"controllers/CidadesController.html":{}}}],["v1/estados",{"_index":389,"title":{},"body":{"controllers/EstadosController.html":{}}}],["v1/status",{"_index":515,"title":{},"body":{"controllers/StatusController.html":{}}}],["v1/tipos",{"_index":582,"title":{},"body":{"controllers/TiposController.html":{}}}],["v1/users",{"_index":660,"title":{},"body":{"controllers/UsersController.html":{}}}],["validadeuser",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["validadeuser(useremail",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":456,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":481,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":458,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":237,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/EstadosService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":910,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vinculocriado",{"_index":566,"title":{},"body":{"injectables/StatusService.html":{}}}],["vinculocriado.save",{"_index":568,"title":{},"body":{"injectables/StatusService.html":{}}}],["vinculoencontrado",{"_index":743,"title":{},"body":{"injectables/UsersService.html":{}}}],["watch",{"_index":864,"title":{},"body":{"index.html":{}}}],["website",{"_index":896,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":885,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/EstadosModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriasModule\n\nCategoriasModule\n\nAppModule -->\n\nCategoriasModule->AppModule\n\n\n\n\n\nCidadesModule\n\nCidadesModule\n\nAppModule -->\n\nCidadesModule->AppModule\n\n\n\n\n\nEstadosModule\n\nEstadosModule\n\nAppModule -->\n\nEstadosModule->AppModule\n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nTiposModule\n\nTiposModule\n\nAppModule -->\n\nTiposModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriasModule\n                        \n                        \n                            CidadesModule\n                        \n                        \n                            EstadosModule\n                        \n                        \n                            StatusModule\n                        \n                        \n                            TiposModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthModule } from './auth/auth.module';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { environment } from './common/environment';\nimport { AppController } from './app.controller';\nimport { UsersModule } from './users/users.module'\nimport { CategoriasModule } from './categorias/categorias.module'\nimport { CidadesModule } from './cidades/cidades.module'\nimport { EstadosModule } from './estados/estados.module'\nimport { StatusModule } from './status/status.module'\nimport { TiposModule } from './tipos/tipos.module'\nimport { APP_GUARD } from '@nestjs/core';\nimport { RolesGuard } from './common/roles.guard';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot(`${environment.db.url}/musiclounge-api`,\n      {\n        useNewUrlParser: true,\n        useCreateIndex: true,\n        useUnifiedTopology: true,\n        useFindAndModify: false\n      }),\n    UsersModule,\n    CategoriasModule,\n    CidadesModule,\n    EstadosModule,\n    StatusModule,\n    TiposModule,\n    AuthModule\n  ],\n  controllers: [AppController],\n  providers: [{\n    provide: APP_GUARD,\n    useClass: RolesGuard,\n  }],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('v1/auth/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Request, Post } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './local-auth.guard'\n\n@Controller()\nexport class AuthController {\n\n    constructor(\n        private authService: AuthService\n    ){}\n\n    @UseGuards(LocalAuthGuard)\n    @Post('v1/auth/login')\n    async login(@Request() req: any){\n        return this.authService.login(req.user)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { Module } from '@nestjs/common';\nimport { UsersModule } from 'src/users/users.module';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { JwtModule } from '@nestjs/jwt'\nimport { PassportModule } from '@nestjs/passport'\nimport { jwtConstants } from './constants';\n\n@Module({\n    imports: [\n        UsersModule,\n        PassportModule,\n        JwtModule.register({\n            secret: jwtConstants.secret,\n            signOptions: { expiresIn: '3600s' }\n        })\n    ],\n    controllers: [\n        AuthController,\n    ],\n    providers: [\n        AuthService,\n        LocalStrategy,\n        JwtStrategy\n    ],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validadeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validadeUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validadeUser(userEmail: string, userPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersService} from './../users/users.service'\nimport * as bcrypt from 'bcryptjs'\nimport { environment } from '../common/environment'\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private usersService: UsersService,\n        private jwtService: JwtService\n    ){}\n\n    async validadeUser(userEmail: string, userPassword: string){\n        \n        const user = await this.usersService.consutarUserEmail(userEmail)\n        if(user){\n            const isMatch = await bcrypt.compare(userPassword, user.password)\n\n            if(user && isMatch === true){\n                const { _id, nome, email } = user\n                return { _id, nome, email }\n            }\n        }\n        \n        return null\n    }\n\n    async   login(user: any){\n        const payload = { email: user.email, sub: user.sub }\n        return {\n            access_token: this.jwtService.sign(payload)\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Categoria.html":{"url":"interfaces/Categoria.html","title":"interface - Categoria","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Categoria\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categorias/interfaces/categorias.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        nome\n                                \n                                \n                                        status\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Categoria extends Document {\n    nome: string,\n    status: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriasController.html":{"url":"controllers/CategoriasController.html","title":"controller - CategoriasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categorias/categorias.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/categorias\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarCategoria\n                            \n                            \n                                    Async\n                                consultarCategoria\n                            \n                            \n                                    Async\n                                consultarCategoriaKey\n                            \n                            \n                                    Async\n                                criarCategoria\n                            \n                            \n                                    Async\n                                deletarCategoria\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarCategoria(updateCategoriaDto: UpdateCategoriaDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/categorias/categorias.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateCategoriaDto\n                                    \n                                                UpdateCategoriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCategoria()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/categorias/categorias.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCategoriaKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCategoriaKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/categorias/categorias.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarCategoria(createCategoriaDto: CreateCategoriaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/categorias/categorias.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoriaDto\n                                    \n                                                CreateCategoriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarCategoria(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/categorias/categorias.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateCategoriaDto } from './dtos/create-categorias.dto';\nimport { UpdateCategoriaDto } from './dtos/update-categorias.dto'\nimport { CategoriasService } from './categorias.service';\nimport { Categoria } from './interfaces/categorias.interface';\n\n@Controller('v1/categorias')\nexport class CategoriasController {\n\n    private readonly logger = new Logger(CategoriasController.name);\n\n    constructor(private readonly categoriasService: CategoriasService) {}\n\n    @Post()\n    async criarCategoria(\n        @Body() createCategoriaDto: CreateCategoriaDto\n    ): Promise{\n        return await this.categoriasService.criarCategoria(createCategoriaDto)\n    }\n\n    @Get()\n    async consultarCategoria(): Promise {\n        return await this.categoriasService.consultarTodosCategoria();\n    }\n\n    @Get('/:_id')\n    async consultarCategoriaKey(@Param('_id') _id: string): Promise {\n        return await this.categoriasService.consultarCategoriaKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarCategoria(\n        @Body() updateCategoriaDto: UpdateCategoriaDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateCategoriaDto: ${JSON.stringify(updateCategoriaDto)}`);\n        await this.categoriasService.atualizarCategoria(_id,updateCategoriaDto)\n    }\n\n    @Delete('/:_id')\n    async deletarCategoria(\n        @Param('_id') _id: string): Promise{\n        this.categoriasService.deletarCategoria(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriasModule.html":{"url":"modules/CategoriasModule.html","title":"module - CategoriasModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriasModule\n\n\n\ncluster_CategoriasModule_exports\n\n\n\ncluster_CategoriasModule_providers\n\n\n\n\nCategoriasService \n\nCategoriasService \n\n\n\nCategoriasModule\n\nCategoriasModule\n\nCategoriasService  -->\n\nCategoriasModule->CategoriasService \n\n\n\n\n\nCategoriasService\n\nCategoriasService\n\nCategoriasModule -->\n\nCategoriasService->CategoriasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categorias/categorias.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriasController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoriasService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CategoriasController } from './categorias.controller';\nimport { CategoriasService } from './categorias.service';\nimport { CategoriaSchema } from './interfaces/categorias.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Categoria', schema: CategoriaSchema}])\n  ],\n  exports: [CategoriasService],\n  controllers: [CategoriasController],\n  providers: [CategoriasService]\n})\nexport class CategoriasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriasService.html":{"url":"injectables/CategoriasService.html","title":"injectable - CategoriasService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoriasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categorias/categorias.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarCategoria\n                            \n                            \n                                    Async\n                                consultarCategoriaKey\n                            \n                            \n                                    Async\n                                consultarTodosCategoria\n                            \n                            \n                                    Async\n                                criarCategoria\n                            \n                            \n                                    Async\n                                deletarCategoria\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoriasModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/categorias/categorias.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoriasModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarCategoria(_id: string, updateCategoriaDto: UpdateCategoriaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categorias/categorias.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCategoriaDto\n                                    \n                                                UpdateCategoriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCategoriaKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCategoriaKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/categorias/categorias.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosCategoria()\n                \n            \n\n\n            \n                \n                    Defined in src/categorias/categorias.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarCategoria(createCategoriaDto: CreateCategoriaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categorias/categorias.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoriaDto\n                                    \n                                                CreateCategoriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarCategoria(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/categorias/categorias.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CategoriasService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/categorias.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateCategoriaDto } from './dtos/create-categorias.dto'\nimport { UpdateCategoriaDto } from './dtos/update-categorias.dto'\nimport { Categoria } from './interfaces/categorias.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class CategoriasService {\n\n    constructor(\n        @InjectModel('Categoria') private readonly categoriasModel: Model\n    ) {}\n\n    private readonly logger = new Logger(CategoriasService.name);\n\n    async criarCategoria(createCategoriaDto: CreateCategoriaDto): Promise {\n        const categoriaCriado = new this.categoriasModel(createCategoriaDto)\n        categoriaCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarCategoria(_id: string, updateCategoriaDto: UpdateCategoriaDto): Promise {\n        const categoriaCriado = await this.categoriasModel.findOne({_id}).exec()\n        if(!categoriaCriado){\n            throw new BadRequestException(`Categoria com o _id ${_id} não encontrado`)\n        }\n        return await this.categoriasModel.findOneAndUpdate({_id: _id},{$set: updateCategoriaDto}).exec()\n    }\n\n    async consultarTodosCategoria(): Promise {\n        return await this.categoriasModel.find().exec()\n    }\n\n    async consultarCategoriaKey(_id: string): Promise {\n        const categoriaCriado = await this.categoriasModel.findOne({_id}).exec()\n        if(!categoriaCriado){\n            throw new BadRequestException(`Categoria com o _id ${_id} não encontrado`)\n        }\n        return await this.categoriasModel.findOne({_id}).exec()\n    }\n\n    async deletarCategoria(_id: string): Promise {\n        const categoriaCriado = await this.categoriasModel.findOne({_id}).exec()\n        if(!categoriaCriado){\n            throw new BadRequestException(`Categoria com o _id ${_id} não encontrado`)\n        }\n        await this.categoriasModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cidade.html":{"url":"interfaces/Cidade.html","title":"interface - Cidade","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cidade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cidades/interfaces/cidades.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        estado_id\n                                \n                                \n                                        nome\n                                \n                                \n                                        uf\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estado_id\n                                    \n                                \n                                \n                                    \n                                        estado_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uf\n                                    \n                                \n                                \n                                    \n                                        uf:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Cidade extends Document {\n    uf: string,\n    nome: string,\n    estado_id: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CidadesController.html":{"url":"controllers/CidadesController.html","title":"controller - CidadesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CidadesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cidades/cidades.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/cidades\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarCidade\n                            \n                            \n                                    Async\n                                consultarCidade\n                            \n                            \n                                    Async\n                                consultarCidadeKey\n                            \n                            \n                                    Async\n                                criarCidade\n                            \n                            \n                                    Async\n                                deletarCidade\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarCidade(updateCidadeDto: UpdateCidadeDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/cidades/cidades.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateCidadeDto\n                                    \n                                                UpdateCidadeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCidade()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cidades/cidades.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCidadeKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCidadeKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/cidades/cidades.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarCidade(createCidadeDto: CreateCidadeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cidades/cidades.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCidadeDto\n                                    \n                                                CreateCidadeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarCidade(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/cidades/cidades.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateCidadeDto } from './dtos/create-cidades.dto';\nimport { UpdateCidadeDto } from './dtos/update-cidades.dto'\nimport { CidadesService } from './cidades.service';\nimport { Cidade } from './interfaces/cidades.interface';\n\n@Controller('v1/cidades')\nexport class CidadesController {\n\n    private readonly logger = new Logger(CidadesController.name);\n\n    constructor(private readonly cidadesService: CidadesService) {}\n\n    @Post()\n    async criarCidade(\n        @Body() createCidadeDto: CreateCidadeDto\n    ): Promise{\n        return await this.cidadesService.criarCidade(createCidadeDto)\n    }\n\n    @Get()\n    async consultarCidade(): Promise {\n        return await this.cidadesService.consultarTodosCidade();\n    }\n\n    @Get('/:_id')\n    async consultarCidadeKey(@Param('_id') _id: string): Promise {\n        return await this.cidadesService.consultarCidadeKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarCidade(\n        @Body() updateCidadeDto: UpdateCidadeDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateCidadeDto: ${JSON.stringify(updateCidadeDto)}`);\n        await this.cidadesService.atualizarCidade(_id,updateCidadeDto)\n    }\n\n    @Delete('/:_id')\n    async deletarCidade(\n        @Param('_id') _id: string): Promise{\n        this.cidadesService.deletarCidade(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CidadesModule.html":{"url":"modules/CidadesModule.html","title":"module - CidadesModule","body":"\n                   \n\n\n\n\n    Modules\n    CidadesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CidadesModule\n\n\n\ncluster_CidadesModule_providers\n\n\n\ncluster_CidadesModule_exports\n\n\n\n\nCidadesService \n\nCidadesService \n\n\n\nCidadesModule\n\nCidadesModule\n\nCidadesService  -->\n\nCidadesModule->CidadesService \n\n\n\n\n\nCidadesService\n\nCidadesService\n\nCidadesModule -->\n\nCidadesService->CidadesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cidades/cidades.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CidadesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CidadesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CidadesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CidadesController } from './cidades.controller';\nimport { CidadesService } from './cidades.service';\nimport { CidadeSchema } from './interfaces/cidades.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Cidade', schema: CidadeSchema}])\n  ],\n  exports: [CidadesService],\n  controllers: [CidadesController],\n  providers: [CidadesService]\n})\nexport class CidadesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CidadesService.html":{"url":"injectables/CidadesService.html","title":"injectable - CidadesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CidadesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cidades/cidades.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarCidade\n                            \n                            \n                                    Async\n                                consultarCidadeKey\n                            \n                            \n                                    Async\n                                consultarTodosCidade\n                            \n                            \n                                    Async\n                                criarCidade\n                            \n                            \n                                    Async\n                                deletarCidade\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cidadesModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/cidades/cidades.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cidadesModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarCidade(_id: string, updateCidadeDto: UpdateCidadeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cidades/cidades.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCidadeDto\n                                    \n                                                UpdateCidadeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCidadeKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCidadeKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cidades/cidades.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosCidade()\n                \n            \n\n\n            \n                \n                    Defined in src/cidades/cidades.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarCidade(createCidadeDto: CreateCidadeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cidades/cidades.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCidadeDto\n                                    \n                                                CreateCidadeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarCidade(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cidades/cidades.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CidadesService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/cidades.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateCidadeDto } from './dtos/create-cidades.dto'\nimport { UpdateCidadeDto } from './dtos/update-cidades.dto'\nimport { Cidade } from './interfaces/cidades.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class CidadesService {\n\n    constructor(\n        @InjectModel('Cidade') private readonly cidadesModel: Model\n    ) {}\n\n    private readonly logger = new Logger(CidadesService.name);\n\n    async criarCidade(createCidadeDto: CreateCidadeDto): Promise {\n        const cidadeCriado = new this.cidadesModel(createCidadeDto)\n        cidadeCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarCidade(_id: string, updateCidadeDto: UpdateCidadeDto): Promise {\n        const cidadeCriado = await this.cidadesModel.findOne({_id}).exec()\n        if(!cidadeCriado){\n            throw new BadRequestException(`Cidade com o _id ${_id} não encontrado`)\n        }\n        return await this.cidadesModel.findOneAndUpdate({_id: _id},{$set: updateCidadeDto}).exec()\n    }\n\n    async consultarTodosCidade(): Promise {\n        return await this.cidadesModel.find().exec()\n    }\n\n    async consultarCidadeKey(_id: string): Promise {\n        const cidadeCriado = await this.cidadesModel.findOne({_id}).exec()\n        if(!cidadeCriado){\n            throw new BadRequestException(`Cidade com o _id ${_id} não encontrado`)\n        }\n        return await this.cidadesModel.findOne({_id}).exec()\n    }\n\n    async deletarCidade(_id: string): Promise {\n        const cidadeCriado = await this.cidadesModel.findOne({_id}).exec()\n        if(!cidadeCriado){\n            throw new BadRequestException(`Cidade com o _id ${_id} não encontrado`)\n        }\n        await this.cidadesModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoriaDto.html":{"url":"classes/CreateCategoriaDto.html","title":"class - CreateCategoriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categorias/dtos/create-categorias.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                nome\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/create-categorias.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/create-categorias.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/create-categorias.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/create-categorias.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCategoriaDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    status: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCidadeDto.html":{"url":"classes/CreateCidadeDto.html","title":"class - CreateCidadeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCidadeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cidades/dtos/create-cidades.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                estado\n                            \n                            \n                                nome\n                            \n                            \n                                uf\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/create-cidades.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            estado\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/create-cidades.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/create-cidades.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/create-cidades.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/create-cidades.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCidadeDto {\n    @ApiProperty()\n    uf: string\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    estado: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEstadoDto.html":{"url":"classes/CreateEstadoDto.html","title":"class - CreateEstadoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEstadoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/estados/dtos/create-estados.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                nome\n                            \n                            \n                                uf\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/create-estados.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/create-estados.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/create-estados.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/create-estados.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateEstadoDto {\n    @ApiProperty()\n    uf: string\n    @ApiProperty()\n    nome: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStatusDto.html":{"url":"classes/CreateStatusDto.html","title":"class - CreateStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/status/dtos/create-status.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                nome\n                            \n                            \n                                tipo\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/create-status.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/create-status.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/create-status.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/create-status.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Tipo } from 'src/tipos/interfaces/tipos.interface';\n\nexport class CreateStatusDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    tipo: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTipoDto.html":{"url":"classes/CreateTipoDto.html","title":"class - CreateTipoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTipoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tipos/dtos/create-tipos.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                nome\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/dtos/create-tipos.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/dtos/create-tipos.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/dtos/create-tipos.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateTipoDto {\n    @ApiProperty()\n    nome: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                nome\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                status\n                            \n                            \n                                tipo\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Role } from '../../common/role.enum'\n\nexport class CreateUserDto {\n    @ApiProperty()\n    avatar: string\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    email: string\n    @ApiProperty()\n    password: string\n    @ApiProperty()\n    tipo: string\n    @ApiProperty()\n    status: string\n    @ApiProperty()\n    roles: string[]\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Estado.html":{"url":"interfaces/Estado.html","title":"interface - Estado","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Estado\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/estados/interfaces/estados.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        nome\n                                \n                                \n                                        uf\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uf\n                                    \n                                \n                                \n                                    \n                                        uf:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Estado extends Document {\n    uf: string,\n    nome: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EstadosController.html":{"url":"controllers/EstadosController.html","title":"controller - EstadosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EstadosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/estados/estados.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/estados\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarEstado\n                            \n                            \n                                    Async\n                                consultarEstado\n                            \n                            \n                                    Async\n                                consultarEstadoKey\n                            \n                            \n                                    Async\n                                criarEstado\n                            \n                            \n                                    Async\n                                deletarEstado\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarEstado(updateEstadoDto: UpdateEstadoDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/estados/estados.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateEstadoDto\n                                    \n                                                UpdateEstadoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarEstado()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/estados/estados.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarEstadoKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarEstadoKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/estados/estados.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarEstado(createEstadoDto: CreateEstadoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/estados/estados.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEstadoDto\n                                    \n                                                CreateEstadoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarEstado(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/estados/estados.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateEstadoDto } from './dtos/create-estados.dto';\nimport { UpdateEstadoDto } from './dtos/update-estados.dto'\nimport { EstadosService } from './estados.service';\nimport { Estado } from './interfaces/estados.interface';\n\n@Controller('v1/estados')\nexport class EstadosController {\n\n    private readonly logger = new Logger(EstadosController.name);\n\n    constructor(private readonly estadosService: EstadosService) {}\n\n    @Post()\n    async criarEstado(\n        @Body() createEstadoDto: CreateEstadoDto\n    ): Promise{\n        return await this.estadosService.criarEstado(createEstadoDto)\n    }\n\n    @Get()\n    async consultarEstado(): Promise {\n        return await this.estadosService.consultarTodosEstado();\n    }\n\n    @Get('/:_id')\n    async consultarEstadoKey(@Param('_id') _id: string): Promise {\n        return await this.estadosService.consultarEstadoKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarEstado(\n        @Body() updateEstadoDto: UpdateEstadoDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateEstadoDto: ${JSON.stringify(updateEstadoDto)}`);\n        await this.estadosService.atualizarEstado(_id,updateEstadoDto)\n    }\n\n    @Delete('/:_id')\n    async deletarEstado(\n        @Param('_id') _id: string): Promise{\n        this.estadosService.deletarEstado(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EstadosModule.html":{"url":"modules/EstadosModule.html","title":"module - EstadosModule","body":"\n                   \n\n\n\n\n    Modules\n    EstadosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EstadosModule\n\n\n\ncluster_EstadosModule_providers\n\n\n\ncluster_EstadosModule_exports\n\n\n\n\nEstadosService \n\nEstadosService \n\n\n\nEstadosModule\n\nEstadosModule\n\nEstadosService  -->\n\nEstadosModule->EstadosService \n\n\n\n\n\nEstadosService\n\nEstadosService\n\nEstadosModule -->\n\nEstadosService->EstadosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/estados/estados.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EstadosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EstadosController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EstadosService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { EstadosController } from './estados.controller';\nimport { EstadosService } from './estados.service';\nimport { EstadoSchema } from './interfaces/estados.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Estado', schema: EstadoSchema}])\n  ],\n  exports: [EstadosService],\n  controllers: [EstadosController],\n  providers: [EstadosService]\n})\nexport class EstadosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EstadosService.html":{"url":"injectables/EstadosService.html","title":"injectable - EstadosService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EstadosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/estados/estados.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarEstado\n                            \n                            \n                                    Async\n                                consultarEstadoKey\n                            \n                            \n                                    Async\n                                consultarTodosEstado\n                            \n                            \n                                    Async\n                                criarEstado\n                            \n                            \n                                    Async\n                                deletarEstado\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(estadosModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/estados/estados.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        estadosModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarEstado(_id: string, updateEstadoDto: UpdateEstadoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/estados/estados.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEstadoDto\n                                    \n                                                UpdateEstadoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarEstadoKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarEstadoKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/estados/estados.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosEstado()\n                \n            \n\n\n            \n                \n                    Defined in src/estados/estados.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarEstado(createEstadoDto: CreateEstadoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/estados/estados.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEstadoDto\n                                    \n                                                CreateEstadoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarEstado(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/estados/estados.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(EstadosService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/estados/estados.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateEstadoDto } from './dtos/create-estados.dto'\nimport { UpdateEstadoDto } from './dtos/update-estados.dto'\nimport { Estado } from './interfaces/estados.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class EstadosService {\n\n    constructor(\n        @InjectModel('Estado') private readonly estadosModel: Model\n    ) {}\n\n    private readonly logger = new Logger(EstadosService.name);\n\n    async criarEstado(createEstadoDto: CreateEstadoDto): Promise {\n        const estadoCriado = new this.estadosModel(createEstadoDto)\n        estadoCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarEstado(_id: string, updateEstadoDto: UpdateEstadoDto): Promise {\n        const estadoCriado = await this.estadosModel.findOne({_id}).exec()\n        if(!estadoCriado){\n            throw new BadRequestException(`Estado com o _id ${_id} não encontrado`)\n        }\n        return await this.estadosModel.findOneAndUpdate({_id: _id},{$set: updateEstadoDto}).exec()\n    }\n\n    async consultarTodosEstado(): Promise {\n        return await this.estadosModel.find().exec()\n    }\n\n    async consultarEstadoKey(_id: string): Promise {\n        const estadoCriado = await this.estadosModel.findOne({_id}).exec()\n        if(!estadoCriado){\n            throw new BadRequestException(`Estado com o _id ${_id} não encontrado`)\n        }\n        return await this.estadosModel.findOne({_id}).exec()\n    }\n\n    async deletarEstado(_id: string): Promise {\n        const estadoCriado = await this.estadosModel.findOne({_id}).exec()\n        if(!estadoCriado){\n            throw new BadRequestException(`Estado com o _id ${_id} não encontrado`)\n        }\n        await this.estadosModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { id: payload.sub, email: payload.email };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { Strategy } from 'passport-local'\nimport { AuthService } from './auth.service'\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy){\n    constructor(private authService: AuthService){\n        super({\n            usernameField: 'email',\n            passwordField: 'password'\n        })\n    }\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.authService.validadeUser(email, password)\n        if(!user){\n            throw new UnauthorizedException()\n        }\n        return user\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/roles.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Role } from './role.enum';\nimport { ROLES_KEY } from './roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (!requiredRoles) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n    console.log(user)\n    return requiredRoles.some((role) => user.roles?.includes(role));\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Status.html":{"url":"interfaces/Status.html","title":"interface - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/status/interfaces/status.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        nome\n                                \n                                \n                                        tipo\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                    \n                                \n                                \n                                    \n                                        tipo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\nimport { Tipo } from 'src/tipos/interfaces/tipos.interface';\n\nexport interface Status extends Document {\n    nome: string,\n    tipo: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StatusController.html":{"url":"controllers/StatusController.html","title":"controller - StatusController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StatusController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/status/status.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/status\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarStatus\n                            \n                            \n                                    Async\n                                consultarStatus\n                            \n                            \n                                    Async\n                                consultarStatusKey\n                            \n                            \n                                    Async\n                                criarStatus\n                            \n                            \n                                    Async\n                                deletarStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarStatus(updateStatusDto: UpdateStatusDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/status/status.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateStatusDto\n                                    \n                                                UpdateStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/status/status.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarStatusKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarStatusKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/status/status.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarStatus(createStatusDto: CreateStatusDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/status/status.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createStatusDto\n                                    \n                                                CreateStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarStatus(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/status/status.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateStatusDto } from './dtos/create-status.dto';\nimport { UpdateStatusDto } from './dtos/update-status.dto'\nimport { StatusService } from './status.service';\nimport { Status } from './interfaces/status.interface';\n\n@Controller('v1/status')\nexport class StatusController {\n\n    private readonly logger = new Logger(StatusController.name);\n\n    constructor(private readonly statusService: StatusService) {}\n\n    @Post()\n    async criarStatus(\n        @Body() createStatusDto: CreateStatusDto\n    ): Promise{\n        return await this.statusService.criarStatus(createStatusDto)\n    }\n\n    @Get()\n    async consultarStatus(): Promise {\n        return await this.statusService.consultarTodosStatus();\n    }\n\n    @Get('/:_id')\n    async consultarStatusKey(@Param('_id') _id: string): Promise {\n        return await this.statusService.consultarStatusKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarStatus(\n        @Body() updateStatusDto: UpdateStatusDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateStatusDto: ${JSON.stringify(updateStatusDto)}`);\n        await this.statusService.atualizarStatus(_id,updateStatusDto)\n    }\n\n    @Delete('/:_id')\n    async deletarStatus(\n        @Param('_id') _id: string): Promise{\n        this.statusService.deletarStatus(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatusModule.html":{"url":"modules/StatusModule.html","title":"module - StatusModule","body":"\n                   \n\n\n\n\n    Modules\n    StatusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_providers\n\n\n\ncluster_StatusModule_exports\n\n\n\n\nStatusService \n\nStatusService \n\n\n\nStatusModule\n\nStatusModule\n\nStatusService  -->\n\nStatusModule->StatusService \n\n\n\n\n\nStatusService\n\nStatusService\n\nStatusModule -->\n\nStatusService->StatusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/status/status.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatusService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StatusController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatusService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { StatusController } from './status.controller';\nimport { StatusService } from './status.service';\nimport { StatusSchema } from './interfaces/status.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Status', schema: StatusSchema}])\n  ],\n  exports: [StatusService],\n  controllers: [StatusController],\n  providers: [StatusService]\n})\nexport class StatusModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusService.html":{"url":"injectables/StatusService.html","title":"injectable - StatusService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/status/status.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarStatus\n                            \n                            \n                                    Async\n                                consultarStatusKey\n                            \n                            \n                                    Async\n                                consultarTodosStatus\n                            \n                            \n                                    Async\n                                criarStatus\n                            \n                            \n                                    Async\n                                deletarStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/status/status.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarStatus(_id: string, updateStatusDto: UpdateStatusDto)\n                \n            \n\n\n            \n                \n                    Defined in src/status/status.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateStatusDto\n                                    \n                                                UpdateStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarStatusKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarStatusKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/status/status.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/status/status.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarStatus(createStatusDto: CreateStatusDto)\n                \n            \n\n\n            \n                \n                    Defined in src/status/status.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createStatusDto\n                                    \n                                                CreateStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarStatus(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/status/status.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(StatusService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/status/status.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateStatusDto } from './dtos/create-status.dto'\nimport { UpdateStatusDto } from './dtos/update-status.dto'\nimport { Status } from './interfaces/status.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class StatusService {\n\n    constructor(\n        @InjectModel('Status') private readonly statusModel: Model\n    ) {}\n\n    private readonly logger = new Logger(StatusService.name);\n\n    async criarStatus(createStatusDto: CreateStatusDto): Promise {\n        const vinculoCriado = new this.statusModel(createStatusDto)\n        vinculoCriado.save( (error, doc) => {\n            if(error){\n                console.log(error)\n                return error\n            }\n            console.log(doc)\n            return doc\n        })\n    }\n\n    async atualizarStatus(_id: string, updateStatusDto: UpdateStatusDto): Promise {\n        const statusEncontrado = await this.statusModel.findOne({_id}).exec()\n        if(!statusEncontrado){\n            throw new BadRequestException(`Status com o _id ${_id} não encontrado`)\n        }\n        return await this.statusModel.findOneAndUpdate({_id: _id},{$set: updateStatusDto}).exec()\n    }\n\n    async consultarTodosStatus(): Promise {\n        return await this.statusModel.find().exec()\n    }\n\n    async consultarStatusKey(_id: string): Promise {\n        const statusEncontrado = await this.statusModel.findOne({_id}).exec()\n        if(!statusEncontrado){\n            throw new BadRequestException(`Status com o _id ${_id} não encontrado`)\n        }\n        return await this.statusModel.findOne({_id}).exec()\n    }\n\n    async deletarStatus(_id: string): Promise {\n        const statusEncontrado = await this.statusModel.findOne({_id}).exec()\n        if(!statusEncontrado){\n            throw new BadRequestException(`Status com o _id ${_id} não encontrado`)\n        }\n        await this.statusModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tipo.html":{"url":"interfaces/Tipo.html","title":"interface - Tipo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tipo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tipos/interfaces/tipos.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        nome\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Tipo extends Document {\n    nome: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TiposController.html":{"url":"controllers/TiposController.html","title":"controller - TiposController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TiposController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tipos/tipos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/tipos\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarTipo\n                            \n                            \n                                    Async\n                                consultarTipo\n                            \n                            \n                                    Async\n                                consultarTipoKey\n                            \n                            \n                                    Async\n                                criarTipo\n                            \n                            \n                                    Async\n                                deletarTipo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarTipo(updateTipoDto: UpdateTipoDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/tipos/tipos.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateTipoDto\n                                    \n                                                UpdateTipoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTipo()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tipos/tipos.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTipoKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTipoKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/tipos/tipos.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarTipo(createTipoDto: CreateTipoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/tipos/tipos.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTipoDto\n                                    \n                                                CreateTipoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarTipo(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/tipos/tipos.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateTipoDto } from './dtos/create-tipos.dto';\nimport { UpdateTipoDto } from './dtos/update-tipos.dto'\nimport { TiposService } from './tipos.service';\nimport { Tipo } from './interfaces/tipos.interface';\n\n@Controller('v1/tipos')\nexport class TiposController {\n\n    private readonly logger = new Logger(TiposController.name);\n\n    constructor(private readonly tiposService: TiposService) {}\n\n    @Post()\n    async criarTipo(\n        @Body() createTipoDto: CreateTipoDto\n    ): Promise{\n        return await this.tiposService.criarTipo(createTipoDto)\n    }\n\n    @Get()\n    async consultarTipo(): Promise {\n        return await this.tiposService.consultarTodosTipo();\n    }\n\n    @Get('/:_id')\n    async consultarTipoKey(@Param('_id') _id: string): Promise {\n        return await this.tiposService.consultarTipoKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarTipo(\n        @Body() updateTipoDto: UpdateTipoDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateTipoDto: ${JSON.stringify(updateTipoDto)}`);\n        await this.tiposService.atualizarTipo(_id,updateTipoDto)\n    }\n\n    @Delete('/:_id')\n    async deletarTipo(\n        @Param('_id') _id: string): Promise{\n        this.tiposService.deletarTipo(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TiposModule.html":{"url":"modules/TiposModule.html","title":"module - TiposModule","body":"\n                   \n\n\n\n\n    Modules\n    TiposModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TiposModule\n\n\n\ncluster_TiposModule_exports\n\n\n\ncluster_TiposModule_providers\n\n\n\n\nTiposService \n\nTiposService \n\n\n\nTiposModule\n\nTiposModule\n\nTiposService  -->\n\nTiposModule->TiposService \n\n\n\n\n\nTiposService\n\nTiposService\n\nTiposModule -->\n\nTiposService->TiposModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tipos/tipos.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TiposService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TiposController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TiposService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TiposController } from './tipos.controller';\nimport { TiposService } from './tipos.service';\nimport { TipoSchema } from './interfaces/tipos.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Tipo', schema: TipoSchema}])\n  ],\n  exports: [TiposService],\n  controllers: [TiposController],\n  providers: [TiposService]\n})\nexport class TiposModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TiposService.html":{"url":"injectables/TiposService.html","title":"injectable - TiposService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TiposService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tipos/tipos.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarTipo\n                            \n                            \n                                    Async\n                                consultarTipoKey\n                            \n                            \n                                    Async\n                                consultarTodosTipo\n                            \n                            \n                                    Async\n                                criarTipo\n                            \n                            \n                                    Async\n                                deletarTipo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tiposModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/tipos/tipos.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tiposModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarTipo(_id: string, updateTipoDto: UpdateTipoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tipos/tipos.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTipoDto\n                                    \n                                                UpdateTipoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTipoKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTipoKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tipos/tipos.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosTipo()\n                \n            \n\n\n            \n                \n                    Defined in src/tipos/tipos.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarTipo(createTipoDto: CreateTipoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tipos/tipos.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTipoDto\n                                    \n                                                CreateTipoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarTipo(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tipos/tipos.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(TiposService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/tipos.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateTipoDto } from './dtos/create-tipos.dto'\nimport { UpdateTipoDto } from './dtos/update-tipos.dto'\nimport { Tipo } from './interfaces/tipos.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class TiposService {\n\n    constructor(\n        @InjectModel('Tipo') private readonly tiposModel: Model\n    ) {}\n\n    private readonly logger = new Logger(TiposService.name);\n\n    async criarTipo(createTipoDto: CreateTipoDto): Promise {\n        const tipoCriado = new this.tiposModel(createTipoDto)\n        tipoCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarTipo(_id: string, updateTipoDto: UpdateTipoDto): Promise {\n        const tipoCriado = await this.tiposModel.findOne({_id}).exec()\n        if(!tipoCriado){\n            throw new BadRequestException(`Tipo com o _id ${_id} não encontrado`)\n        }\n        return await this.tiposModel.findOneAndUpdate({_id: _id},{$set: updateTipoDto}).exec()\n    }\n\n    async consultarTodosTipo(): Promise {\n        return await this.tiposModel.find().exec()\n    }\n\n    async consultarTipoKey(_id: string): Promise {\n        const tipoCriado = await this.tiposModel.findOne({_id}).exec()\n        if(!tipoCriado){\n            throw new BadRequestException(`Tipo com o _id ${_id} não encontrado`)\n        }\n        return await this.tiposModel.findOne({_id}).exec()\n    }\n\n    async deletarTipo(_id: string): Promise {\n        const tipoCriado = await this.tiposModel.findOne({_id}).exec()\n        if(!tipoCriado){\n            throw new BadRequestException(`Tipo com o _id ${_id} não encontrado`)\n        }\n        await this.tiposModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoriaDto.html":{"url":"classes/UpdateCategoriaDto.html","title":"class - UpdateCategoriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categorias/dtos/update-categorias.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nome\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/update-categorias.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/update-categorias.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/update-categorias.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateCategoriaDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    status: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCidadeDto.html":{"url":"classes/UpdateCidadeDto.html","title":"class - UpdateCidadeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCidadeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cidades/dtos/update-cidades.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                estado\n                            \n                            \n                                nome\n                            \n                            \n                                uf\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            estado\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/update-cidades.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/update-cidades.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/update-cidades.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/update-cidades.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateCidadeDto {\n    @ApiProperty()\n    uf: string\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    estado: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEstadoDto.html":{"url":"classes/UpdateEstadoDto.html","title":"class - UpdateEstadoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEstadoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/estados/dtos/update-estados.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nome\n                            \n                            \n                                uf\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/update-estados.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/update-estados.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/update-estados.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateEstadoDto {\n    @ApiProperty()\n    uf: string\n    @ApiProperty()\n    nome: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStatusDto.html":{"url":"classes/UpdateStatusDto.html","title":"class - UpdateStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/status/dtos/update-status.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nome\n                            \n                            \n                                tipo\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/update-status.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/update-status.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/update-status.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Tipo } from 'src/tipos/interfaces/tipos.interface';\n\nexport class UpdateStatusDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    tipo: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTipoDto.html":{"url":"classes/UpdateTipoDto.html","title":"class - UpdateTipoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTipoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tipos/dtos/update-tipos.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nome\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/dtos/update-tipos.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/dtos/update-tipos.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateTipoDto {\n    @ApiProperty()\n    nome: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                email\n                            \n                            \n                                nome\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                status\n                            \n                            \n                                tipo\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateUserDto {\n    @ApiProperty()\n    avatar: string\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    email: string\n    @ApiProperty()\n    password: string\n    @ApiProperty()\n    tipo: string\n    @ApiProperty()\n    status: string\n    @ApiProperty()\n    roles: string[]\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/interfaces/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        avatar\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        nome\n                                \n                                \n                                        password\n                                \n                                \n                                        roles\n                                \n                                \n                                        status\n                                \n                                \n                                        tipo\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                    \n                                \n                                \n                                    \n                                        tipo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\nimport { Role } from '../../common/role.enum'\n\nexport interface User extends Document {\n    avatar: string,\n    nome: string,\n    email: string,\n    password: string,\n    tipo: string,\n    status: string,\n    roles: string[],\n    createdAt: Date,\n    updatedAt: Date,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarUser\n                            \n                            \n                                    Async\n                                consultarUsers\n                            \n                            \n                                    Async\n                                consultarUsersKey\n                            \n                            \n                                    Async\n                                criarUser\n                            \n                            \n                                    Async\n                                deletarUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarUser(updateUserDto: UpdateUserDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarUsersKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarUsersKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarUser(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { UpdateUserDto } from './dtos/update-user.dto'\nimport { UsersService } from './users.service';\nimport { User } from './interfaces/user.interface';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\nimport { Roles } from 'src/common/roles.decorator';\nimport { Role } from 'src/common/role.enum';\n\n@Controller('v1/users')\nexport class UsersController {\n\n    private readonly logger = new Logger(UsersController.name);\n\n    constructor(private readonly usuariosService: UsersService) {}\n\n    //@UseGuards(JwtAuthGuard)\n    @Post()\n    async criarUser(\n        @Body() createUserDto: CreateUserDto\n    ): Promise{\n        return await this.usuariosService.criarUser(createUserDto)\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Get()\n    async consultarUsers(): Promise {\n        return await this.usuariosService.consultarTodosUsers();\n    }\n\n    //@UseGuards(JwtAuthGuard)\n    @Get('/:_id')\n    async consultarUsersKey(@Param('_id') _id: string): Promise {\n        return await this.usuariosService.consultarUsersKey(_id);\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Put('/:_id')\n    async atualizarUser(\n        @Body() updateUserDto: UpdateUserDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateUserDto: ${JSON.stringify(updateUserDto)}`);\n        await this.usuariosService.atualizarUser(_id,updateUserDto)\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Delete('/:_id')\n    async deletarUser(\n        @Param('_id') _id: string): Promise{\n        this.usuariosService.deletarUser(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { UserSchema } from './interfaces/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'User', schema: UserSchema}]),\n    PassportModule.register({ defaultStrategy: 'jwt', session: false })\n  ],\n  exports: [UsersService],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarUser\n                            \n                            \n                                    Async\n                                bcrypt\n                            \n                            \n                                    Async\n                                consultarTodosUsers\n                            \n                            \n                                    Async\n                                consultarUsersKey\n                            \n                            \n                                    Async\n                                consutarUserEmail\n                            \n                            \n                                    Async\n                                criarUser\n                            \n                            \n                                    Async\n                                deletarUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarUser(_id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            bcrypt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bcrypt(password)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarUsersKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarUsersKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consutarUserEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consutarUserEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarUser(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(UsersService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/users/users.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateUserDto } from './dtos/create-user.dto'\nimport { UpdateUserDto } from './dtos/update-user.dto'\nimport { User } from './interfaces/user.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\nimport * as bcrypt from 'bcryptjs'\nimport { environment } from '../common/environment'\n\n@Injectable()\nexport class UsersService {\n\n    constructor(\n        @InjectModel('User') private readonly userModel: Model\n    ) {}\n\n    private readonly logger = new Logger(UsersService.name);\n\n    async criarUser(createUserDto: CreateUserDto): Promise {\n        const hash = await bcrypt.hash(createUserDto.password, environment.security.saltRounds)\n        createUserDto.password = hash\n        const userCriado = new this.userModel(createUserDto)\n        userCriado.save( (error, doc) => {\n            if(error){\n                console.log(error)\n                return error\n            }\n            console.log(doc)\n            return doc\n        })\n    }\n\n    async atualizarUser(_id: string, updateUserDto: UpdateUserDto): Promise {\n        const userEncontrado = await this.userModel.findOne({_id}).exec()\n        if(!userEncontrado){\n            throw new BadRequestException(`Usuario com o _id ${_id} não encontrado`)\n        }\n\n        const isMatch = await bcrypt.compare(updateUserDto.password, userEncontrado.password)\n\n        if(isMatch === false){\n            const hash = await bcrypt.hash(updateUserDto.password, environment.security.saltRounds)\n            updateUserDto.password = hash\n        }\n\n        return await this.userModel.findOneAndUpdate({_id: _id},{$set: updateUserDto}).populate('tipo').populate('status').exec()\n    }\n\n    async consultarTodosUsers(): Promise {\n        return await this.userModel.find().populate('tipo').populate('status').exec()\n    }\n\n    async consultarUsersKey(_id: string): Promise {\n        const vinculoEncontrado = await this.userModel.findOne({_id}).exec()\n        if(!vinculoEncontrado){\n            throw new BadRequestException(`Usuario com o _id ${_id} não encontrado`)\n        }\n        return await this.userModel.findOne({_id}).populate('tipo').populate('status').exec()\n    }\n\n    async consutarUserEmail(email: string){\n        return await this.userModel.findOne({ email }).populate('tipo').populate('status').exec()\n    }\n\n    async deletarUser(_id: string): Promise {\n        const vinculoEncontrado = await this.userModel.findOne({_id}).exec()\n        if(!vinculoEncontrado){\n            throw new BadRequestException(`Usuario com o _id ${_id} não encontrado`)\n        }\n        await this.userModel.deleteOne({_id}).exec()\n    }\n\n    async bcrypt(password){\n        const saltOrRounds = 10;\n        const hash = await bcrypt.hash(password, saltOrRounds);\n        return hash\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categorias/categorias.controller.ts\n            \n            controller\n            CategoriasController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categorias/categorias.service.ts\n            \n            injectable\n            CategoriasService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/categorias/dtos/create-categorias.dto.ts\n            \n            class\n            CreateCategoriaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/categorias/dtos/update-categorias.dto.ts\n            \n            class\n            UpdateCategoriaDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/categorias/interfaces/categorias.interface.ts\n            \n            interface\n            Categoria\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/categorias/interfaces/categorias.schema.ts\n            \n            variable\n            CategoriaSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cidades/cidades.controller.ts\n            \n            controller\n            CidadesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cidades/cidades.service.ts\n            \n            injectable\n            CidadesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cidades/dtos/create-cidades.dto.ts\n            \n            class\n            CreateCidadeDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cidades/dtos/update-cidades.dto.ts\n            \n            class\n            UpdateCidadeDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cidades/interfaces/cidades.interface.ts\n            \n            interface\n            Cidade\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cidades/interfaces/cidades.schema.ts\n            \n            variable\n            CidadeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/estados/dtos/create-estados.dto.ts\n            \n            class\n            CreateEstadoDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/estados/dtos/update-estados.dto.ts\n            \n            class\n            UpdateEstadoDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/estados/estados.controller.ts\n            \n            controller\n            EstadosController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/estados/estados.service.ts\n            \n            injectable\n            EstadosService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/estados/interfaces/estados.interface.ts\n            \n            interface\n            Estado\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/estados/interfaces/estados.schema.ts\n            \n            variable\n            EstadoSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/status/dtos/create-status.dto.ts\n            \n            class\n            CreateStatusDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/status/dtos/update-status.dto.ts\n            \n            class\n            UpdateStatusDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/status/interfaces/status.interface.ts\n            \n            interface\n            Status\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/status/interfaces/status.schema.ts\n            \n            variable\n            StatusSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/status/status.controller.ts\n            \n            controller\n            StatusController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/status/status.service.ts\n            \n            injectable\n            StatusService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/tipos/dtos/create-tipos.dto.ts\n            \n            class\n            CreateTipoDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tipos/dtos/update-tipos.dto.ts\n            \n            class\n            UpdateTipoDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tipos/interfaces/tipos.interface.ts\n            \n            interface\n            Tipo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tipos/interfaces/tipos.schema.ts\n            \n            variable\n            TipoSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tipos/tipos.controller.ts\n            \n            controller\n            TiposController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tipos/tipos.service.ts\n            \n            injectable\n            TiposService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/dtos/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/interfaces/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @casl/ability : ^5.2.2\n        \n            @nestjs/common : ^7.0.4\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mongoose : ^7.0.4\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/cookiejar : ^2.1.2\n        \n            @types/mongoose : ^5.10.3\n        \n            @types/uuid : ^8.3.0\n        \n            axios : ^0.21.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            flatted : ^3.1.1\n        \n            fs : 0.0.1-security\n        \n            https : ^1.0.0\n        \n            mongoose : ^5.10.19\n        \n            node-localstorage : ^2.1.6\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            qs : ^6.9.4\n        \n            querystring : ^0.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request : ^2.88.2\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n        \n            uuid : ^8.3.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CidadesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EstadosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TiposModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriasModule\n\n\n\ncluster_CategoriasModule_exports\n\n\n\ncluster_CategoriasModule_providers\n\n\n\ncluster_CidadesModule\n\n\n\ncluster_CidadesModule_exports\n\n\n\ncluster_CidadesModule_providers\n\n\n\ncluster_EstadosModule\n\n\n\ncluster_EstadosModule_exports\n\n\n\ncluster_EstadosModule_providers\n\n\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_StatusModule_providers\n\n\n\ncluster_TiposModule\n\n\n\ncluster_TiposModule_exports\n\n\n\ncluster_TiposModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriasModule\n\nCategoriasModule\n\nAppModule -->\n\nCategoriasModule->AppModule\n\n\n\n\n\nCategoriasService \n\nCategoriasService \n\nCategoriasService  -->\n\nCategoriasModule->CategoriasService \n\n\n\n\n\nCidadesModule\n\nCidadesModule\n\nAppModule -->\n\nCidadesModule->AppModule\n\n\n\n\n\nCidadesService \n\nCidadesService \n\nCidadesService  -->\n\nCidadesModule->CidadesService \n\n\n\n\n\nEstadosModule\n\nEstadosModule\n\nAppModule -->\n\nEstadosModule->AppModule\n\n\n\n\n\nEstadosService \n\nEstadosService \n\nEstadosService  -->\n\nEstadosModule->EstadosService \n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nStatusService \n\nStatusService \n\nStatusService  -->\n\nStatusModule->StatusService \n\n\n\n\n\nTiposModule\n\nTiposModule\n\nAppModule -->\n\nTiposModule->AppModule\n\n\n\n\n\nTiposService \n\nTiposService \n\nTiposService  -->\n\nTiposModule->TiposService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCategoriasService\n\nCategoriasService\n\nCategoriasModule -->\n\nCategoriasService->CategoriasModule\n\n\n\n\n\nCidadesService\n\nCidadesService\n\nCidadesModule -->\n\nCidadesService->CidadesModule\n\n\n\n\n\nEstadosService\n\nEstadosService\n\nEstadosModule -->\n\nEstadosService->EstadosModule\n\n\n\n\n\nStatusService\n\nStatusService\n\nStatusModule -->\n\nStatusService->StatusModule\n\n\n\n\n\nTiposService\n\nTiposService\n\nTiposModule -->\n\nTiposService->TiposModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategoriaSchema   (src/.../categorias.schema.ts)\n                        \n                        \n                            CidadeSchema   (src/.../cidades.schema.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            EstadoSchema   (src/.../estados.schema.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                        \n                            StatusSchema   (src/.../status.schema.ts)\n                        \n                        \n                            TipoSchema   (src/.../tipos.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/categorias/interfaces/categorias.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CategoriaSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    nome: {\n        type: String,\n        required: true\n    },\n    status: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'categorias' })\n                        \n                    \n\n\n            \n        \n\n    src/cidades/interfaces/cidades.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CidadeSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    uf: {\n        type: String,\n        required: true\n    },\n    nome: {\n        type: String,\n        required: true\n    },\n    estado_id: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'cidades' })\n                        \n                    \n\n\n            \n        \n\n    src/common/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    db: {\n        //url: process.env.DB_URL || 'mongodb://musiclounge-api:558484Gnis@localhost:27017/'\n        url: process.env.DB_URL || 'mongodb://localhost:27017'\n    },\n    security: {\n        saltRounds: process.env.SALT_ROUNDS || 10\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/estados/interfaces/estados.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EstadoSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    uf: {\n        type: String,\n        required: true\n    },\n    nome: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'estados' })\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    secret: '5347y5467ytryert43523432ew'\n}\n                        \n                    \n\n\n            \n        \n\n    src/common/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROLES_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'roles'\n                        \n                    \n\n\n            \n        \n\n    src/status/interfaces/status.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StatusSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    nome: {\n        type: String,\n        required: true\n    },\n    tipo: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Tipo'\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'status' })\n                        \n                    \n\n\n            \n        \n\n    src/tipos/interfaces/tipos.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TipoSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    nome: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'tipos' })\n                        \n                    \n\n\n            \n        \n\n    src/users/interfaces/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    avatar: {\n        type: String,\n        required: false\n    },\n    nome: {\n        type: String,\n        required: true\n    },\n    email: {\n        type: String,\n        unique: true,\n        required: true\n    },\n    password: {\n        type: String,\n        required: true\n    },\n    tipo: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Tipo'\n    },\n    status: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Status'\n    },\n    roles: {\n        type: [String],\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'users' })\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
